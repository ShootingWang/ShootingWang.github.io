<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>费米问题</title>
    <link href="/2020/05/01/%E8%B4%B9%E7%B1%B3%E9%97%AE%E9%A2%98/"/>
    <url>/2020/05/01/%E8%B4%B9%E7%B1%B3%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>Fermi Problem</p><a id="more"></a><h1><span id="费米问题">费米问题</span></h1><ul><li>一个正常成年人有多少根头发？</li><li>上海有多少个加油站？</li><li>估算一下北京有多少理发店？</li><li>一辆公交车里能装下多少个煎饼果子？</li><li>你知道厦门一天的燃油税费是多少吗？</li><li>……</li></ul><p>在产品、运营、数据分析相关的面试中，经常会遇到上述这类问题，这类问题英文称之为<strong>Fermi Problem</strong>，即<strong>费米问题</strong>。</p><p>若按照<u>需求端</u>、<u>供给端</u>、<u>供需端</u>将费米问题分类：</p><ul><li><strong>需求端</strong><ul><li>全国一年消费多少猪肉？</li><li></li></ul></li><li><strong>供给端</strong><ul><li>北京有多少个加油站？</li><li>芝加哥有多少个调音师？</li><li>上海有多少辆出租车？</li><li>北京市每天有多少人乘坐地铁？</li><li>公司楼下的星巴克一年的咖啡收益？</li></ul></li><li><strong>供需端</strong><ul><li></li></ul></li></ul><h2><span id="估算">估算</span></h2><p>费米问题的估算通常有</p><ul><li><strong>大</strong>：资本市场对青睐的公司或行业的潜力预测</li><li><strong>小</strong>：某场运营活动的前期市场调研</li></ul><p>进行费米问题估算时，重要的是——<strong>将难获得的数据拆分为易获得的数据</strong>。</p><p>大致流程：</p><pre class="mermaid">graph TD;    假设推算模型，并列出需要的数据 --> 确认并预估已知数据;    确认并预估已知数据 --> 进行毛估算;</pre><h3><span id="全国一年消费多少猪肉">全国一年消费多少猪肉</span></h3><p><u>需求端</u></p><ol><li>确定估算模型<script type="math/tex; mode=display">全国一年消费猪肉量=每人每天消费的猪肉量\times 全国人数\times 一年的天数</script></li><li>估算模型中的数据是否已知？若仍有未知，继续拆解<ul><li>全国人数$N$（已知）</li><li>一年的天数$n$（365或366）</li><li>每人每天消费的猪肉量（未知）<script type="math/tex; mode=display">每人每天消费的猪肉量=每人每天消耗的肉量\times 猪肉在肉类食材中的占比</script><ul><li>估算：平均每人每天的肉类消耗量为200g</li><li>估算：肉类=猪肉+牛肉+羊肉+鸡鸭+水产+…，假设猪肉在肉类食材中的占比为50$\%$<script type="math/tex; mode=display">每人每天消费的猪肉量=200g\times 50\%=100g</script></li></ul></li></ul></li><li>数据整合，粗略估计<br>\begin{equation}<br>\begin{aligned}<br>全国一年消费猪肉量&amp;=每人每天消费的猪肉量\times 全国人数\times 一年的天数\\<br>&amp;= 每人每天消耗的肉量\times 猪肉在肉类食材中的占比\times 14亿\times 365天\\<br>&amp;= 200g \times 50\% \times 14亿\times 365天<br>\end{aligned}<br>\end{equation}</li></ol><p>更细致的分析：</p><ul><li>市场调查：采用问卷调查形式，调查人均每日消耗肉量及猪肉的占比，然后选取中位数</li><li>市场细分：前面考虑的是全国，可以按不同区域划分分别估算再进行整合，也可以考虑按消费者的不同年龄划分分别估算再进行整合</li></ul><h3><span id="芝加哥有多少钢琴调音师">芝加哥有多少钢琴调音师</span></h3><p><u>供给端</u></p><ol><li><p>假设推算模型，列出需要的数据</p><script type="math/tex; mode=display">调音师数量=钢琴总数÷工作效率</script></li><li><p>确认并预估已知数据<br>即：判断公式中的数据是否已知，若仍有数据未知，则继续拆解。</p><ul><li>在芝加哥生活的人数$N$</li><li>芝加哥平均每个家庭人数$H$</li><li>大约$n_H$个家庭中有一个家庭有定期给钢琴调钢琴的需要</li><li>钢琴定期调音平均每$T$年进行一次</li><li>每个调音师完成一台钢琴的调音工作平均需要花费$t$时</li><li>每个调音师每天工作$h$小时，一周工作$d$天，一年工作$w$周</li></ul></li><li>进行粗略估算<script type="math/tex; mode=display">钢琴数量(架)=\frac{N}{H}\frac{1}{n_H}\frac{1}{T}</script><script type="math/tex; mode=display">工作效率（架/每调音师每年）=\frac{wdh}{t}</script><script type="math/tex; mode=display">调音师数量=\frac{钢琴数量}{工作效率}</script></li></ol><h3><span id="北京有多少个加油站">北京有多少个加油站</span></h3><p><u>需求端</u></p><ol><li>假设推算模型<script type="math/tex; mode=display">加油站数=\frac{每天需加油的车辆数}{每个加油站平均每天可加油车辆数}</script></li><li>确认并预估已知数据<ul><li>北京每天需加油的车辆数$C$<br>eg:北京人口$N$，平均每个家庭4个人，平均每个家庭$c$台车，每台车平均$d$天需加油一次<script type="math/tex; mode=display">北京每天需加油的车辆数C=N÷4\times c÷d</script></li><li>每个加油站平均每天可加油车辆数<br>eg：每个加油站平均加油桩个数$n$（4个）、加油站平均每天工作$h$小时（14小时）、每小时加油桩利用率$r$、每个桩加一次油耗时$t$小时（5分钟，1/12小时）<script type="math/tex; mode=display">每个加油站平均每天可加油车辆数=nhr÷t</script></li></ul></li><li>进行粗略估算<br>\begin{aligned}<br>加油站数&amp;=\frac{每天需加油的车辆数}{每个加油站平均每天可加油车辆数}\\<br>&amp;= \frac{\frac{北京人口}{平均每个家庭人口数}\times \frac{平均每个家庭c台车}{每台车平均d天需加油一次}}{\frac{每个加油站平均加油桩个数n\times加油站平均每天工作h小时\times 每小时加油桩利用率r}{每个桩加一次油耗时t小时}}<br>\end{aligned}</li></ol><h1><span id="参考资料">参考资料</span></h1><p>[1] <a href="http://www.woshipm.com/zhichang/631625.html" target="_blank" rel="noopener">新技能Get：面试中常见的费米估算要怎么破</a><br>[2] <a href="https://mp.weixin.qq.com/s/UopcXE3SAZIwi8UXCZ7aDg" target="_blank" rel="noopener">你的城市有多少理发店？费米估算问题套路详解（1）</a><br>[3] <a href="https://zhuanlan.zhihu.com/p/79510656" target="_blank" rel="noopener">费米估算</a><br>[4] <a href="https://blog.csdn.net/weixin_42464525/article/details/81322655" target="_blank" rel="noopener">费米估算类问题-解决方法</a></p>]]></content>
    
    
    <categories>
      
      <category>数据分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据分析</tag>
      
      <tag>业务向</tag>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树</title>
    <link href="/2020/05/01/%E6%A0%91/"/>
    <url>/2020/05/01/%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<p>Tree</p><a id="more"></a><p>一对多的数据结构——树</p><h1><span id="树">树</span></h1><p>树（Tree）是$n$个结点的有限集。</p><ul><li><strong>空树</strong>：$n=0$</li><li><strong>非空树</strong>：<ul><li>$n&gt;0$</li><li>有且仅有一个特定的<strong>根结点</strong>（Root）</li><li>当$n&gt;1$时，其余结点可分为$m(m&gt;0)$个互不相交的有限集$T_1,\cdots,T_m$；其中每一个集合自身是一棵树，称之为根的<strong>子树</strong>（SubTree）</li></ul></li></ul><h1><span id="结点">结点</span></h1><p>树的<strong>结点</strong>（Node）包含一个数据元素及若干指向其子树的分支。</p><h2><span id="度">度</span></h2><p>结点拥有的子树的数目称为结点的<strong>度</strong>（Degree）。</p><ul><li><strong>叶结点</strong>（Leaf）：度为0的结点</li><li><strong>非终端结点/分支结点</strong>：度不为0的结点</li><li><strong>内部结点</strong>：除根结点外的分支结点</li></ul><p><strong>树的度</strong>是指树内各结点的度的最大值。</p><h2><span id="结点间关系">结点间关系</span></h2><ul><li><strong>Child</strong>：结点的子树的根，称为该结点的Child</li><li><strong>Parent</strong>：</li><li><strong>Sibling</strong></li></ul><h4><span id="参考资料">参考资料</span></h4><p>[1] <a href="https://cn.bing.com/images/search?view=detailV2&amp;ccid=C5Esbt%2bk&amp;id=170146C04E5B565014CAFDAFA4EFC765B59309FE&amp;thid=OIP.C5Esbt-kWgbxO78iCXRcfwAAAA&amp;mediaurl=https%3a%2f%2fsubetter.com%2fimages%2ffigures%2f20180513_01.png&amp;exph=360&amp;expw=430&amp;q=%e4%ba%8c%e5%8f%89%e6%a0%91&amp;simid=608035418833488197&amp;selectedIndex=126" target="_blank" rel="noopener">首页缩略图</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Data Cleaning Projects</title>
    <link href="/2020/04/30/Data-Cleaning-Projects/"/>
    <url>/2020/04/30/Data-Cleaning-Projects/</url>
    
    <content type="html"><![CDATA[<p>Data Cleansing Projects 汇总</p><a id="more"></a><ul><li><a href="/2020/04/30/data-clean-Titanic/" title="数据集Titanic">数据集Titanic</a></li></ul><h4><span id="参考资料">参考资料</span></h4><p>[1] <a href="https://cn.bing.com/images/search?view=detailV2&amp;ccid=gpCSzLGU&amp;id=1898D7F14E27BFCC00B895A307ECC5F04313DE94&amp;thid=OIP.gpCSzLGUdIzn2Pkx-1iVFAHaEN&amp;mediaurl=https%3a%2f%2fpublic.tableau.com%2fs%2fsites%2fdefault%2ffiles%2fmedia%2fdata-cleaning-thumb2_20.jpg&amp;exph=766&amp;expw=1349&amp;q=data+cleaning&amp;simid=608010194433082183&amp;selectedIndex=175" target="_blank" rel="noopener">首页缩略图</a></p>]]></content>
    
    
    <categories>
      
      <category>Projects</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Data Cleaning</tag>
      
      <tag>Python</tag>
      
      <tag>R</tag>
      
      <tag>Projects</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Jupyter Notebook使用技巧</title>
    <link href="/2020/04/30/Jupyter-Notebook%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <url>/2020/04/30/Jupyter-Notebook%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<p>Jupyter Tips!</p><a id="more"></a><h3><span id="输出结果显示图片">输出结果显示图片</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure><h3><span id="同时输出多个命令的结果">同时输出多个命令的结果</span></h3><ol><li>方法一：在文件开头添加以下命令（仅对当前文件有效）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.interactiveshell <span class="keyword">import</span> InteractiveShell</span><br><span class="line">InteractiveShell.ast_node_interactivity = <span class="string">"all"</span></span><br></pre></td></tr></table></figure></li><li>方法二：直接添加配置文件（对所有文件有效）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.ipython/profile_default/ipython_config.py</span><br></pre></td></tr></table></figure>配置文件内容为：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c &#x3D; get_config()</span><br><span class="line">#Run all nodes interactively</span><br><span class="line">c.InteractiveShell.ast_node_interactivity &#x3D; &quot;all&quot;</span><br></pre></td></tr></table></figure></li></ol><h3><span id="安装r-kernel">安装R kernel</span></h3><p>先在R中安装以下几个package：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">install.packages(c(<span class="string">'repr'</span>, <span class="string">'IRdisplay'</span>, <span class="string">'evaluate'</span>, <span class="string">'crayon'</span>, </span><br><span class="line">                   <span class="string">'pbdZMQ'</span>, <span class="string">'devtools'</span>, <span class="string">'uuid'</span>, <span class="string">'digest'</span>))</span><br><span class="line">devtools::install_github(<span class="string">'IRkernel/IRkernel'</span>)</span><br></pre></td></tr></table></figure><br>在Anaconda Prompt中输入以下命令：<br>第一步：输入R，调用R<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R</span><br></pre></td></tr></table></figure><br>第二步：安装R kernel，有2种方式（自由选择，个人建议第二种）：</p><ol><li>直接安装在当前用户中：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IRkernel::installspec()</span><br></pre></td></tr></table></figure></li><li>安装在系统中：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IRkernel::installspec(user &#x3D; FALSE)</span><br></pre></td></tr></table></figure></li></ol><h3><span id="运行时间">运行时间</span></h3><p>在cell中添加 <code>%%time</code> ，返回结果中会含有cell单次运行的时间。<br>在cell中添加 <code>%timeit</code> ，会运行该cell 100,000次（默认），然后以运行最快的3次结果的平均值作为结果。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line">%timeit numpy.random.normal(size = <span class="number">10</span>)</span><br><span class="line"><span class="comment"># 5.91 µs ± 258 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)</span></span><br><span class="line">%%time</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    time.sleep(<span class="number">0.01</span>)</span><br><span class="line"><span class="comment"># Wall time: 1.73 s</span></span><br></pre></td></tr></table></figure></p><h3><span id="插件管理器">插件管理器</span></h3><p>Nbextensions相当于Jupyter的插件管理器。<br>安装：（在Anaconda Prompt中输入）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c conda-forge jupyter_contrib_nbextensions</span><br></pre></td></tr></table></figure><br>安装过程需要选择[y/n]，输入y。</p><p>该选项卡下方罗列了大量Jupyter可用的插件；点击某个插件的名称，即可在列表下方显示该插件的说明文档；勾选某个插件前面的方框，则系统会加载启用该插件。</p><h3><span id="jupyter-lab">Jupyter Lab！</span></h3><p>超好用！是Project Jupyter的下一代用户界面，具体安装和使用说明请见《<a href="https://mp.weixin.qq.com/s/T-Afq0vAw0lVB9Bave-aNQ" target="_blank" rel="noopener">Jupyter：超强的下一代Jupyter Notebook</a>》（原文作者Parul Pandey，EarlGrey翻译，<a href="https://towardsdatascience.com/jupyter-lab-evolution-of-the-jupyter-notebook-5297cacde6b?gi=dec00114bf03" target="_blank" rel="noopener">原文网址</a>）。</p><h3><span id="切换code和markdown">切换Code和Markdown</span></h3><p>要快捷地切换Cell的形式（Code或Markdown），可按如下操作：<br>选中Cell（光标在Cell中闪烁），点击“Esc”，进入命令模式（光标不再Cell中闪烁，但Cell左侧仍有蓝色粗线条）；然后键盘按“Y”将Cell切换为Code模式，键盘按“M”则将Cell切换为Markdown模式。即</p><ul><li>Esc+Y：code模式</li><li>Esc+M：Markdown模式</li><li>Esc+B：快速添加新的Cell</li></ul><h3><span id="禁止输出警告warnings">禁止输出警告（warnings）</span></h3><p>运行以下代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">"ignore"</span>)</span><br></pre></td></tr></table></figure></p><h4><span id="参考资料">参考资料</span></h4><p>[1] <a href="https://www.google.com/Jupyter" target="_blank" rel="noopener">首页缩略图</a><br>[2] <a href="https://www.cnblogs.com/bella1102/p/11032519.html" target="_blank" rel="noopener">Jupyter Notebook 如何让一个Cell 可以同时输出多个语句的值？</a><br>[3] <a href="https://www.sohu.com/a/219989263_774914" target="_blank" rel="noopener">Jupyter Notebook/Lab中添加R Kernel的详细步骤</a><br>[4] <a href="https://blog.csdn.net/create115721/article/details/79243641" target="_blank" rel="noopener">Jupyter Notebook的27个窍门，技巧和快捷键</a><br>[5] <a href="https://mp.weixin.qq.com/s/5sFkpI4eEodVQuLya3K5rw" target="_blank" rel="noopener">九大神招，让Python里数据分析神器Jupyter，完美升华</a></p>]]></content>
    
    
    <categories>
      
      <category>无从属</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Jupyter</tag>
      
      <tag>软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL题库</title>
    <link href="/2020/04/30/SQL%E9%A2%98%E5%BA%93/"/>
    <url>/2020/04/30/SQL%E9%A2%98%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<p>SQL相关题目积累~</p><a id="more"></a>]]></content>
    
    
    <categories>
      
      <category>题库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode刷题</title>
    <link href="/2020/04/29/Leetcode%E5%88%B7%E9%A2%98/"/>
    <url>/2020/04/29/Leetcode%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>Leetcode刷题记录~</p><a id="more"></a><h1><span id="728-self-dividing-numbers">728. Self Dividing Numbers</span></h1><p><a href="https://leetcode.com/problems/self-dividing-numbers/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Runtime=68ms, Memory=13.9MB</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">selfDividingNumbers</span><span class="params">(self, left: int, right: int)</span> -&gt; List[int]:</span></span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> range(left, right+<span class="number">1</span>):</span><br><span class="line">            nums = list(map(int, list(str(num))))</span><br><span class="line">            count = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> <span class="keyword">in</span> nums:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> nums:</span><br><span class="line">                    <span class="keyword">if</span> num%j == <span class="number">0</span>:</span><br><span class="line">                        count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> count == len(nums):</span><br><span class="line">                    result.append(num)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"><span class="comment">## 参考 Solution</span></span><br><span class="line"><span class="comment">## Rumtime=36ms, Memory=14MB</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">selfDividingNumbers</span><span class="params">(self, left: int, right: int)</span> -&gt; List[int]:</span></span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> range(left, right+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> str(num):</span><br><span class="line">                <span class="keyword">if</span> x == <span class="string">"0"</span> <span class="keyword">or</span> num % int(x) != <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result.append(num)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure></p><p><a href>题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1><span id="832-flipping-an-image">832. Flipping an Image</span></h1><p><a href="https://leetcode.com/problems/flipping-an-image/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Runtime=56ms, Memory=13.9MB</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">flipAndInvertImage</span><span class="params">(self, A: List[List[int]])</span> -&gt; List[List[int]]:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(A)):</span><br><span class="line">            A[i].reverse()</span><br><span class="line">            A[i] = [<span class="number">1</span>-x <span class="keyword">for</span> x <span class="keyword">in</span> A[i]]</span><br><span class="line">        <span class="keyword">return</span> A</span><br><span class="line"><span class="comment">## Runtime=52ms, Memory=14MB</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">flipAndInvertImage</span><span class="params">(self, A: List[List[int]])</span> -&gt; List[List[int]]:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(A)):</span><br><span class="line">            A[i] = A[i][::<span class="number">-1</span>]  <span class="comment">## difference</span></span><br><span class="line">            A[i] = [<span class="number">1</span>-x <span class="keyword">for</span> x <span class="keyword">in</span> A[i]]</span><br><span class="line">        <span class="keyword">return</span> A</span><br><span class="line"><span class="comment">## Runtime=48ms, Memory=14MB</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">flipAndInvertImage</span><span class="params">(self, A: List[List[int]])</span> -&gt; List[List[int]]:</span></span><br><span class="line">        <span class="keyword">for</span> i, row <span class="keyword">in</span> enumerate(A):  <span class="comment">## differencee</span></span><br><span class="line">            A[i] = row[::<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">for</span> j, col <span class="keyword">in</span> enumerate(A[i]):  <span class="comment">## difference</span></span><br><span class="line">                A[i][j] = <span class="number">1</span> - col</span><br><span class="line">        <span class="keyword">return</span> A</span><br></pre></td></tr></table></figure></p><h1><span id="942-di-string-match">942. DI String Match</span></h1><p><a href="https://leetcode.com/problems/di-string-match/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 参考了 Solution</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">diStringMatch</span><span class="params">(self, S: str)</span> -&gt; List[int]:</span></span><br><span class="line">        low, high = <span class="number">0</span>, len(S)</span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> S:</span><br><span class="line">            <span class="keyword">if</span> s == <span class="string">'I'</span>:</span><br><span class="line">                result.append(low)</span><br><span class="line">                low += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result.append(high)</span><br><span class="line">                high -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> result + [low]</span><br></pre></td></tr></table></figure></p><h1><span id="977-squares-of-a-sorted-array">977. Squares of a Sorted Array</span></h1><p><a href="https://leetcode.com/problems/squares-of-a-sorted-array/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Runtime=228ms, Memory=15.7MB</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortedSquares</span><span class="params">(self, A: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">         <span class="keyword">return</span> sorted([x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> A])</span><br><span class="line"><span class="comment">## Runtime=216ms, Memory=15.8MB</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortedSquares</span><span class="params">(self, A: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">         <span class="keyword">return</span> sorted([x*x <span class="keyword">for</span> x <span class="keyword">in</span> A])</span><br></pre></td></tr></table></figure></p><h1><span id="1021-remove-outermost-parentheses">1021. Remove Outermost Parentheses</span></h1><p><a href="https://leetcode.com/problems/remove-outermost-parentheses/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 参考了solutions in discuss</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeOuterParentheses</span><span class="params">(self, S: str)</span> -&gt; str:</span></span><br><span class="line">        count, result = <span class="number">0</span>, []</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> S:</span><br><span class="line">            <span class="keyword">if</span> s == <span class="string">")"</span>:  <span class="comment">##  完整配对count=0；增加一个")"count减一；增加一个"("count加一</span></span><br><span class="line">                count -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> count &gt; <span class="number">0</span>:</span><br><span class="line">                result.append(s)</span><br><span class="line">            <span class="keyword">if</span> s == <span class="string">"("</span>: </span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>.join(result)</span><br></pre></td></tr></table></figure></p><p><a href>题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1><span id="1108-defanging-an-ip-address">1108. Defanging an IP Address</span></h1><p><a href="https://leetcode.com/problems/defanging-an-ip-address/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">defangIPaddr</span><span class="params">(self, address: str)</span> -&gt; str:</span></span><br><span class="line">        <span class="keyword">return</span> address.replace(<span class="string">"."</span>, <span class="string">"[.]"</span>)</span><br></pre></td></tr></table></figure></p><h1><span id="1221-split-a-string-in-balanced-strings">1221. Split a String in Balanced Strings</span></h1><p><a href="https://leetcode.com/problems/split-a-string-in-balanced-strings/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">balancedStringSplit</span><span class="params">(self, s: str)</span> -&gt; int:</span></span><br><span class="line">        ans_count = <span class="number">0</span></span><br><span class="line">        L_num, R_num = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> ss <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> ss==<span class="string">"L"</span>:</span><br><span class="line">                L_num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                R_num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> L_num==R_num:</span><br><span class="line">                ans_count += <span class="number">1</span></span><br><span class="line">                L_num, R_num = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> ans_count</span><br></pre></td></tr></table></figure></p><h1><span id="1252-cells-with-odd-values-in-a-matrix">1252. Cells with Odd Values in a Matrix</span></h1><p><a href="https://leetcode.com/problems/cells-with-odd-values-in-a-matrix/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">oddCells</span><span class="params">(self, n: int, m: int, indices: List[List[int]])</span> -&gt; int:</span></span><br><span class="line">        nums = [[<span class="number">0</span>]*m]*n  <span class="comment">## 快速创建0矩阵</span></span><br><span class="line">        rows, cols = [<span class="number">0</span>]*n, [<span class="number">0</span>]*m</span><br><span class="line">        lst = []</span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> indices:</span><br><span class="line">            ri, ci = index[<span class="number">0</span>], index[<span class="number">1</span>]</span><br><span class="line">            rows[ri] += <span class="number">1</span></span><br><span class="line">            cols[ci] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(m):</span><br><span class="line">                nums[i][j] = rows[i] + cols[j]</span><br><span class="line">            lst += nums[i]</span><br><span class="line">        <span class="keyword">return</span> sum([<span class="number">1</span> <span class="keyword">if</span> x%<span class="number">2</span>==<span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">for</span> x <span class="keyword">in</span> lst])</span><br></pre></td></tr></table></figure></p><p><a href>题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1><span id="1266-minimum-time-visiting-all-points">1266. Minimum Time Visiting All Points</span></h1><p><a href="https://leetcode.com/problems/minimum-time-visiting-all-points/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minTimeToVisitAllPoints</span><span class="params">(self, points: List[List[int]])</span> -&gt; int:</span></span><br><span class="line">        steps = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(points)<span class="number">-1</span>):</span><br><span class="line">            x1, y1 = points[i][<span class="number">0</span>], points[i][<span class="number">1</span>]</span><br><span class="line">            x2, y2 = points[i+<span class="number">1</span>][<span class="number">0</span>], points[i+<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line">            m, n = abs(x2 - x1), abs(y2 - y1)</span><br><span class="line">            steps += max(m, n)</span><br><span class="line">        <span class="keyword">return</span> steps</span><br></pre></td></tr></table></figure></p><h1><span id="1281-subtract-the-product-and-sum-of-digits-of-an-integer">1281. Subtract the Product and Sum of Digits of an Integer</span></h1><p><a href="https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subtractProductAndSum</span><span class="params">(self, n: int)</span> -&gt; int:</span></span><br><span class="line">        num = [x <span class="keyword">for</span> x <span class="keyword">in</span> str(n)]</span><br><span class="line">        num = list(map(int, num))  <span class="comment">## 将int拆开成单个数字列表</span></span><br><span class="line">        pp = <span class="number">1</span></span><br><span class="line">        ss = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> nn <span class="keyword">in</span> num:</span><br><span class="line">            pp *= nn</span><br><span class="line">            ss += nn</span><br><span class="line">        <span class="keyword">return</span> pp - ss</span><br></pre></td></tr></table></figure></p><h1><span id="1290-convert-binary-number-in-a-linked-list-to-integer">1290. Convert Binary Number in a Linked List to Integer</span></h1><p><a href="https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, val=0, next=None):</span></span><br><span class="line"><span class="comment">#         self.val = val</span></span><br><span class="line"><span class="comment">#         self.next = next</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getDecimalValue</span><span class="params">(self, head: ListNode)</span> -&gt; int:</span></span><br><span class="line">        str_num = <span class="string">""</span></span><br><span class="line">        <span class="keyword">while</span> head:  <span class="comment">## 当head非空</span></span><br><span class="line">            str_num += str(head.val)</span><br><span class="line">            head = head.next</span><br><span class="line">        <span class="keyword">return</span> int(str_num, <span class="number">2</span>)</span><br></pre></td></tr></table></figure></p><p><a href>题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1><span id="1295-find-numbers-with-even-number-of-digits">1295. Find Numbers with Even Number of Digits</span></h1><p><a href="https://leetcode.com/problems/find-numbers-with-even-number-of-digits/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findNumbers</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></span><br><span class="line">        ans_count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">            num_count = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> num:</span><br><span class="line">                num_count += <span class="number">1</span></span><br><span class="line">                num //= <span class="number">10</span>  <span class="comment">## num除以10的商</span></span><br><span class="line">            <span class="keyword">if</span> num_count % <span class="number">2</span> == <span class="number">0</span>:  <span class="comment">## num_count除以2的余数等于0</span></span><br><span class="line">                ans_count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans_count</span><br></pre></td></tr></table></figure></p><h1><span id="1299-replace-elements-with-greatest-element-on-right-side">1299. Replace Elements with Greatest Element on Right Side</span></h1><p><a href="https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Runtime=4720ms</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replaceElements</span><span class="params">(self, arr: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">        out = []</span><br><span class="line">        n = len(arr)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n<span class="number">-1</span>):</span><br><span class="line">            out.append(max(arr[(i+<span class="number">1</span>):]))</span><br><span class="line">        out.append(<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line"><span class="comment">## A solution in 'Discuss'</span></span><br><span class="line"><span class="comment">## Runtime=125ms</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replaceElements</span><span class="params">(self, arr: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">        max_num = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(arr)<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">            hold = arr[i]</span><br><span class="line">            arr[i] = max_num</span><br><span class="line">            <span class="keyword">if</span> hold &gt; max_num:</span><br><span class="line">                max_num = hold</span><br><span class="line">        <span class="keyword">return</span> arr</span><br></pre></td></tr></table></figure></p><h1><span id="1304-find-n-unique-integers-sum-up-to-zero">1304. Find N Unique Integers Sum up to Zero</span></h1><p><a href="https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sumZero</span><span class="params">(self, n: int)</span> -&gt; List[int]:</span></span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            lst = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(n<span class="number">-1</span>)]</span><br><span class="line">            result.extend(lst)</span><br><span class="line">            result.append(-sum(lst))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            lst = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,int((n+<span class="number">1</span>)//<span class="number">2</span>))]</span><br><span class="line">            result.extend(lst)</span><br><span class="line">            result.extend([-x <span class="keyword">for</span> x <span class="keyword">in</span> lst])</span><br><span class="line">            result.append(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure></p><h1><span id="1309-decrypt-string-from-alphabet-to-integer-mapping">1309. Decrypt String from Alphabet to Integer Mapping</span></h1><p><a href="https://leetcode.com/problems/decrypt-string-from-alphabet-to-integer-mapping/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">freqAlphabets</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        result = <span class="string">""</span></span><br><span class="line">        dic = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>):</span><br><span class="line">            <span class="keyword">if</span> i &lt;= <span class="number">105</span>:</span><br><span class="line">                dic[str(i - <span class="number">96</span>)] = chr(i)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dic[str(i - <span class="number">96</span>) + <span class="string">'#'</span>] = chr(i)</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; len(s):</span><br><span class="line">            <span class="keyword">if</span>  i+<span class="number">2</span> &lt; len(s) <span class="keyword">and</span> s[i+<span class="number">2</span>] == <span class="string">'#'</span>:</span><br><span class="line">                key = s[i:i+<span class="number">3</span>]</span><br><span class="line">                i += <span class="number">3</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                key = s[i]</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            result += dic[key]</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure></p><h1><span id="1313-decompress-run-length-encoded-list">1313. Decompress Run-Length Encoded List</span></h1><p><a href="https://leetcode.com/problems/decompress-run-length-encoded-list/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decompressRLElist</span><span class="params">(self, nums: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">        n = len(nums)</span><br><span class="line">        ans = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(int(n/<span class="number">2</span>)):</span><br><span class="line">            n = nums[<span class="number">2</span>*i]</span><br><span class="line">            num = nums[<span class="number">2</span>*i+<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(n):</span><br><span class="line">                ans.append(num)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure></p><h1><span id="1323-maximum-69-number">1323. Maximum 69 Number</span></h1><p><a href="https://leetcode.com/problems/maximum-69-number/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maximum69Number</span> <span class="params">(self, num: int)</span> -&gt; int:</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        out = [x <span class="keyword">for</span> x <span class="keyword">in</span> str(num)]</span><br><span class="line">        <span class="keyword">while</span> i&lt;len(out):</span><br><span class="line">            <span class="keyword">if</span> out[i] == <span class="string">'6'</span>:</span><br><span class="line">                out[i] = <span class="string">'9'</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> int(<span class="string">''</span>.join(out))</span><br></pre></td></tr></table></figure></p><h1><span id="1342-number-of-steps-to-reduce-a-number-to-zero">1342. Number of Steps to Reduce a Number to Zero</span></h1><p><a href="https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numberOfSteps</span> <span class="params">(self, num: int)</span> -&gt; int:</span></span><br><span class="line">        cou = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> num&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">0</span>:  <span class="comment">## if even</span></span><br><span class="line">                num = int(num / <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment">## if odd</span></span><br><span class="line">                num -= <span class="number">1</span></span><br><span class="line">            cou += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> cou</span><br></pre></td></tr></table></figure></p><h1><span id="1351-count-negative-numbers-in-a-sorted-matrix">1351. Count Negative Numbers in a Sorted Matrix</span></h1><p><a href="https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countNegatives</span><span class="params">(self, grid: List[List[int]])</span> -&gt; int:</span></span><br><span class="line">        nums = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(grid)):</span><br><span class="line">            nums += grid[i]</span><br><span class="line">        <span class="keyword">return</span> sum([<span class="number">1</span> <span class="keyword">if</span> x&lt;<span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">for</span> x <span class="keyword">in</span> nums])</span><br></pre></td></tr></table></figure></p><h1><span id="1370-increasing-decreasing-string">1370. Increasing Decreasing String</span></h1><p><a href="https://leetcode.com/problems/increasing-decreasing-string/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 参考了 solution in discuss</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortString</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        result = []</span><br><span class="line">        s = [x <span class="keyword">for</span> x <span class="keyword">in</span> s]  <span class="comment">## 等价于 s = list(s)</span></span><br><span class="line">        direct = <span class="number">1</span>  <span class="comment">## =1表示从小到大；=-1表示从大到小</span></span><br><span class="line">        <span class="keyword">while</span> s:  <span class="comment">## 当s非空时</span></span><br><span class="line">            <span class="keyword">if</span> direct == <span class="number">1</span>:</span><br><span class="line">                ss = sorted(set(s))  <span class="comment">## 从小到大</span></span><br><span class="line">            <span class="keyword">else</span>: </span><br><span class="line">                ss = sorted(set(s))[::<span class="number">-1</span>]  <span class="comment">## 从大到小</span></span><br><span class="line">            result.extend(ss)</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> ss:</span><br><span class="line">                s.remove(x)</span><br><span class="line">            direct *= <span class="number">-1</span>  <span class="comment">## 反向</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>.join(result)</span><br></pre></td></tr></table></figure></p><h1><span id="1374-generate-a-string-with-characters-that-have-odd-counts">1374. Generate a String With Characters That Have Odd Counts</span></h1><p><a href="https://leetcode.com/problems/generate-a-string-with-characters-that-have-odd-counts/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generateTheString</span><span class="params">(self, n: int)</span> -&gt; str:</span></span><br><span class="line">        <span class="keyword">if</span> n%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'a'</span>*(n<span class="number">-1</span>) + <span class="string">'b'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'a'</span>*n</span><br></pre></td></tr></table></figure></p><h1><span id="1380-lucky-numbers-in-a-matrix">1380. Lucky Numbers in a Matrix</span></h1><p><a href="https://leetcode.com/problems/lucky-numbers-in-a-matrix/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">luckyNumbers</span> <span class="params">(self, matrix: List[List[int]])</span> -&gt; List[int]:</span></span><br><span class="line">        rows = [min(x) <span class="keyword">for</span> x <span class="keyword">in</span> matrix]</span><br><span class="line">        n, m = len(matrix), len(matrix[<span class="number">0</span>])</span><br><span class="line">        cols, ans = [], []</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(m):</span><br><span class="line">            col = [x[j] <span class="keyword">for</span> x <span class="keyword">in</span> matrix]</span><br><span class="line">            cols.append(max(col))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(m):</span><br><span class="line">                <span class="keyword">if</span> matrix[i][j] == rows[i] <span class="keyword">and</span> matrix[i][j] == cols[j]:</span><br><span class="line">                    ans.append(matrix[i][j])</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure></p><h1><span id="1389-create-target-array-in-the-given-order">1389. Create Target Array in the Given Order</span></h1><p><a href="https://leetcode.com/problems/create-target-array-in-the-given-order/" target="_blank" rel="noopener">题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">createTargetArray</span><span class="params">(self, nums: List[int], index: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">        ans = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">            num, idx = nums[i], index[i]</span><br><span class="line">            <span class="keyword">if</span> idx &gt;= len(ans):</span><br><span class="line">                ans.append(num)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                a, b = ans[:idx], ans[idx:]</span><br><span class="line">                ans = a + [num] + b</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure></p><p><a href>题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><a href>题目详情</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    
    <categories>
      
      <category>题库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Leetcode</tag>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python题库</title>
    <link href="/2020/04/29/Python%E9%A2%98%E5%BA%93/"/>
    <url>/2020/04/29/Python%E9%A2%98%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<p>Python相关题目积累~</p><a id="more"></a><ul><li><a href="/2020/04/29/Python-is-%E5%92%8C-%E7%9A%84%E5%8C%BA%E5%88%AB/" title="is和&#x3D;&#x3D;的区别">is和&#x3D;&#x3D;的区别</a></li><li><a href="/2020/04/29/python-2-tuple%E5%92%8Clist/" title="tuple（元组）和list（列表）的区别">tuple（元组）和list（列表）的区别</a></li><li><a href="/2020/04/29/python-3/" title="b, B, KB, MB, GB的区别">b, B, KB, MB, GB的区别</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>题库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+GitHub+Markdown常用用法</title>
    <link href="/2020/04/28/Hexo-GitHub-Markdown%E5%B8%B8%E7%94%A8%E7%94%A8%E6%B3%95/"/>
    <url>/2020/04/28/Hexo-GitHub-Markdown%E5%B8%B8%E7%94%A8%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>记录一些Hexo+Markdown的常用语法~</p><a id="more"></a><!--toc--><h2><span id="font-matter区">Font-matter区</span></h2><p>Font-matter区即 两行<code>---</code>之间的内容</p><h2><span id="正文">正文</span></h2><h3><span id="文章摘要">文章摘要</span></h3><p>若想要在博客首页只展示文章的摘要，在摘要与正文中间插入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure></p><h3><span id="引用站内文章">引用站内文章</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link 站内文章对应的.md名称（不带后缀.md） %&#125;</span><br></pre></td></tr></table></figure><p>如：引用站内文章《<a href="/2020/04/27/Restart/" title="Restart!">Restart!</a>》，对应的文件名是<code>Restart.md</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link Restart %&#125;</span><br></pre></td></tr></table></figure></p><h3><span id="标题自动编号">标题自动编号</span></h3><p>参考：<a href="http://r12f.com/posts/adding-index-to-your-headings-with-hexo-heading-index/" target="_blank" rel="noopener">为Hexo博客标题自动添加序号：hexo-heading-index</a></p><h2><span id="代码">代码</span></h2><h3><span id="高亮">高亮</span></h3><ul><li><a href="https://www.zfl9.com/hexo-code.html" target="_blank" rel="noopener">使用prism.js进行代码高亮</a></li></ul><h2><span id="hexo主题">Hexo主题</span></h2><h3><span id="fluid主题">Fluid主题</span></h3><p>安装可见：<a href="https://hexo.fluid-dev.com/docs/guide/#%E4%B8%BB%E9%A2%98%E7%AE%80%E4%BB%8B" target="_blank" rel="noopener">Hexo-fluid</a></p><p>压缩包<a href="https://github.com/fluid-dev/hexo-theme-fluid/releases/tag/v1.8.0-beta2">下载</a></p><h2><span id="参考资料">参考资料</span></h2>]]></content>
    
    
    <categories>
      
      <category>无从属</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>随机森林</title>
    <link href="/2020/04/28/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/"/>
    <url>/2020/04/28/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/</url>
    
    <content type="html"><![CDATA[<p>Random Forest</p><a id="more"></a><ul><li>随机森林是一种<u>判别分类方法</u></li><li>随机森林是建立在<a href="/2020/04/28/%E5%86%B3%E7%AD%96%E6%A0%91/" title="决策树">决策树</a>基础上的集成学习器</li></ul>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>机器学习</tag>
      
      <tag>分类</tag>
      
      <tag>有监督学习</tag>
      
      <tag>算法</tag>
      
      <tag>判别式模型</tag>
      
      <tag>集成学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>决策树</title>
    <link href="/2020/04/28/%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <url>/2020/04/28/%E5%86%B3%E7%AD%96%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<p>Decision Tree</p><a id="more"></a><h6><span id="参考资料">参考资料</span></h6><p>[1] <a href="http://vas3k.com/blog/machine_learning/" target="_blank" rel="noopener">封面图片来源</a></p>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>机器学习</tag>
      
      <tag>分类</tag>
      
      <tag>有监督学习</tag>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>支持向量机</title>
    <link href="/2020/04/28/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/"/>
    <url>/2020/04/28/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<p>SVM</p><p>Support Vector Machine</p><a id="more"></a><p>支持向量机是一种<u>有监督学习</u>算法，既可以用于分类，也可以用于回归。</p><p>支持向量机是<u>判别分类方法</u>，用一条分割线（二维空间中的直线或曲线）或流形体（多维空间中的曲线、曲面等概念的推广）将各种类型分割开。</p><p>简单分类数据：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line">sns.set()</span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建类别数为2的分类数据</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets.samples_generator <span class="keyword">import</span> make_blobs</span><br><span class="line">X, y = make_blobs(n_samples=<span class="number">50</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.60</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=<span class="string">'autumn'</span>)</span><br></pre></td></tr></table></figure></p><p><img src="/hootingWang.github.io/2020/04/28/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/SVM-Figure_1.png" srcset="/img/loading.gif" alt="简单分类数据"></p><p>简单分割线：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">xfit = np.linspace(<span class="number">-1</span>, <span class="number">3.5</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=<span class="string">'autumn'</span>)</span><br><span class="line">plt.plot([<span class="number">0.6</span>], [<span class="number">2.1</span>], <span class="string">'x'</span>, color=<span class="string">'red'</span>, markeredgewidth=<span class="number">2</span>, markersize=<span class="number">10</span>)  <span class="comment">##特殊点</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> m, b <span class="keyword">in</span> [(<span class="number">1</span>, <span class="number">0.65</span>), (<span class="number">0.5</span>, <span class="number">1.6</span>), (<span class="number">-0.2</span>, <span class="number">2.9</span>)]:</span><br><span class="line">    plt.plot(xfit, m * xfit + b, <span class="string">'-k'</span>)  <span class="comment">##画三条分割直线</span></span><br><span class="line"></span><br><span class="line">plt.xlim(<span class="number">-1</span>, <span class="number">3.5</span>)</span><br></pre></td></tr></table></figure></p><p><img src="/hootingWang.github.io/2020/04/28/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/SVM-Figure_3.png" srcset="/img/loading.gif" alt="三条简单分割直线"><br>上图中的三条简单分割直线（分割器）都能很好地判别这些样本（每条直线都能将圆点数据点正确地分为两类）。但是对于点“X”，不同的分割器将其分配到不同的标签。</p><p>若将分割直线变成具有宽度的、到最近点边界的线条，如下图：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">xfit = np.linspace(<span class="number">-1</span>, <span class="number">3.5</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=<span class="string">'autumn'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> m, b, d <span class="keyword">in</span> [(<span class="number">1</span>, <span class="number">0.65</span>, <span class="number">0.33</span>), (<span class="number">0.5</span>, <span class="number">1.6</span>, <span class="number">0.55</span>), (<span class="number">-0.2</span>, <span class="number">2.9</span>, <span class="number">0.2</span>)]:</span><br><span class="line">    yfit = m * xfit + b</span><br><span class="line">    plt.plot(xfit, yfit, <span class="string">'-k'</span>)</span><br><span class="line">    plt.fill_between(xfit, yfit - d, yfit + d, edgecolor=<span class="string">'none'</span>, color=<span class="string">'#AAAAAA'</span>, alpha=<span class="number">0.4</span>)</span><br><span class="line"></span><br><span class="line">plt.xlim(<span class="number">-1</span>, <span class="number">3.5</span>)</span><br></pre></td></tr></table></figure></p><p><img src="/hootingWang.github.io/2020/04/28/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/SVM-Figure_2.png" srcset="/img/loading.gif" alt="带有边界的分割器"></p><p><img src="/hootingWang.github.io/2020/04/28/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/SVM-Figure_4.jpeg" srcset="/img/loading.gif" alt="带边界线和支持向量的支持向量机分类器"></p><p>正好在边界线上的点，被称为<strong>支持向量</strong>。</p><p>在scikit-learn中，支持向量的坐标存放在分类器的<code>support_vectors_</code>属性中。</p><p>SVM对远离边界的数据点不敏感。</p><h3><span id="总结">总结</span></h3><p>SVM的优点：</p><ol><li>模型以来的支持向量比较少，消耗内存少</li><li>预测阶段的速度快</li><li>模型只受边界线附近的点的影响，因此对于高维数据的学习效果非常好</li><li>与核函数方法的配合极具通用性，能够适用于不同类型的数据</li></ol><p>SVM的缺点：</p><ol><li>随着样本量$N$的增加，模型的训练复杂度可能会高达$\mathcal{O}(N^3)$，即使经过高效处理后，复杂度也有$\mathcal{O}(N^2)$。即，大样本下模型学习的计算成本会很高。</li><li>训练效果非常依赖于边界软化参数$C$的选择是否合理；需要通过交叉检验进行检索；当数据集较大时，计算量也很大。</li></ol><h3><span id="参考资料">参考资料</span></h3><p>[1] Python数据科学手册：<a href="https://book.douban.com/subject/27667378/" target="_blank" rel="noopener">豆瓣图书</a>；<a href="https://jakevdp.github.io/PythonDataScienceHandbook/" target="_blank" rel="noopener">英文版在线阅读</a><br>[2] <a href="https://mp.weixin.qq.com/s?__biz=MzI3NTkyMjA4NA==&amp;mid=2247493162&amp;idx=1&amp;sn=59c051af70c1b4e0ab40d661df1d1ade&amp;chksm=eb7fcbe1dc0842f7cfc9c7224d4c0e2a3fe52d5abe18fe241b717bdf85b59c15d6c16fc99ee8&amp;scene=126&amp;sessionid=1588039863&amp;key=974eeeca00c2ed2bc09cde22429650400361fd61321edc232f5976aa402ec1f37e927d042d76e7eba2cc584551a40b22a7d2cd6e65fe539e5bd3854b306460a7770a747143ced86385ab3a53ffb7ba92&amp;ascene=1&amp;uin=MjAwNDUzMjgxNw%3D%3D&amp;devicetype=Windows+10&amp;version=62080079&amp;lang=zh_CN&amp;exportkey=AWzG3axKR6jb4RKDg8wBmkw%3D&amp;pass_ticket=581sFN8nM0rkEWD6Hp%2BhUJbN5RHzfuAW3vhCzJ2BWY6u9zDUMhZpRh3fnoocgekU" target="_blank" rel="noopener">中文开源！《Python数据科学》PDF下载</a><br>[3] <a href="https://github.com/jakevdp/PythonDataScienceHandbook">Python Data Science Handbook: full text in Jupyter Notebooks</a><br>[4] <a href="http://vas3k.com/blog/machine_learning/" target="_blank" rel="noopener">封面图片来源</a></p>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>机器学习</tag>
      
      <tag>分类</tag>
      
      <tag>有监督学习</tag>
      
      <tag>算法</tag>
      
      <tag>回归</tag>
      
      <tag>判别式模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tableau学习资源</title>
    <link href="/2020/04/27/Tableau%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
    <url>/2020/04/27/Tableau%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<p>汇总Tableau软件的相关学习资料~</p><a id="more"></a><h2><span id="书籍">书籍</span></h2><h3><span id="触手可及的大数据分析工具tableau案例集">《触手可及的大数据分析工具：Tableau案例集》</span></h3><p><a href="https://book.douban.com/subject/26614166/" target="_blank" rel="noopener">豆瓣图书</a></p><h2><span id="视频">视频</span></h2><h3><span id="未明学院-tableau可视化软件的基础操作和进阶">未明学院-Tableau可视化软件的基础操作和进阶</span></h3><p><a href="https://www.bilibili.com/video/av66028664?from=search&amp;seid=5882922976125124544" target="_blank" rel="noopener">视频地址</a></p><p>共14个视频</p><ol><li>Tableau简介、条形图与直方图</li><li>数据预处理、折线图、饼图</li><li>基本表、树状图、气泡图、词云</li><li>标靶图、甘特图、瀑布图</li><li>Tableau进阶：数据集合并、符号地图、智能显示、插入自定义形状、仪表板</li><li>填充地图、多维地图、混合地图</li><li>多边形地图和背景地图：设置地理信息，自定义地图码导入、设置地图源</li><li>数据分层、数据分组、数据集</li><li>计算字段与表计算：粒度、聚合与比率</li><li>人口金字塔、漏斗图、箱线图</li><li>范围：线图、倾斜图</li><li>网络图与弧线图</li><li>雷达图与弧线图</li><li>回归分析、时间序列分析</li></ol>]]></content>
    
    
    <categories>
      
      <category>藏宝库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tableau</tag>
      
      <tag>可视化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>泊松分布</title>
    <link href="/2020/04/27/%E6%B3%8A%E6%9D%BE%E5%88%86%E5%B8%83/"/>
    <url>/2020/04/27/%E6%B3%8A%E6%9D%BE%E5%88%86%E5%B8%83/</url>
    
    <content type="html"><![CDATA[<p>Poisson Distribution</p><a id="more"></a><p>生活中大多数场景服从泊松分布，如奶茶店一天的顾客数、理发店一天的顾客数、馒头店一天卖出的馒头数等等。</p><p>假设我经营着一家咖啡馆——SW Coffee。</p><p>考虑长度为$T$的时间段内光顾的客人数量。将$T$时间切分为$n$份，每个时间段内只会发生“来了一位客人”或“没来客人”，即二项分布Binomial(p)</p><script type="math/tex; mode=display">P(来了一位客人)=p</script><p>那么，$T$时间段内来的客人数量$X$服从$n$重Bernoulli分布B(n,p)</p><script type="math/tex; mode=display">P(X=k)=\left(\begin{array}{c}n\\k\end{array}\right)p^k(1-p)^{n-k}</script><p>均值为</p><script type="math/tex; mode=display">\lambda=E(X)=np</script><p>若将$T$时间段切分得足够小（$n\rightarrow\infty$），则$T$时间内来了$k$个客人的概率为<br>\begin{equation}<br>\begin{aligned}<br>&amp; \lim_{n\rightarrow \infty}\left(<br>\begin{array}{c}<br>n\\<br>k<br>\end{array}\right)<br>p^k(1-p)^{n-k}\\<br>=&amp; \lim_{n\rightarrow\infty}\frac{n(n-1)\cdots(n-k+1)}{k!}\left(\frac{\lambda}{n}\right)^k\left(1-\frac{\lambda}{n}\right)^{n-k}\\<br>=&amp; \lim_{n\rightarrow\infty}\frac{\lambda^k}{k!}\frac{n}{n}\frac{n-1}{n}\cdots\frac{n-k+1}{n}\left(1-\frac{\lambda}{n}\right)^{n-k}\\<br>=&amp; \lim_{n\rightarrow\infty}\frac{\lambda^k}{k!}1\cdot(1-\frac{1}{n})\cdot\cdots\cdot\left(1-\frac{k-1}{n}\right)\left(1-\frac{\lambda}{n}\right)^{-k}\left(1-\frac{\lambda}{n}\right)^{n}\\<br>=&amp; \frac{\lambda^k}{k!}e^{-\lambda}<br>\end{aligned}<br>\end{equation}<br>其中</p><script type="math/tex; mode=display">\lim_{n\rightarrow\infty}1\cdot(1-\frac{1}{n})\cdot\cdots\cdot(1-\frac{k-1}{n})\left(1-\frac{\lambda}{n}\right)^{-k}=1</script><script type="math/tex; mode=display">\lim_{n\rightarrow\infty}\left(1-\frac{\lambda}{n}\right)^{n}=\lim_{n\rightarrow\infty}e^{\lambda}\left(1-\frac{\lambda}{n}\right)^{\frac{n}{\lambda}}=e^{\lambda}e^{-1}=e^{-\lambda}</script><p>强度为$\lambda$的泊松分布过程的点间间距服从参数为$\lambda$的指数分布（均值为$1/\lambda$）。</p><p>未完待续（表示本篇博客未写完~会继续更新）</p><h2><span id="参考资料">参考资料</span></h2><p>[1] <a href="https://tse2-mm.cn.bing.net/th/id/OIP.aQZfy2h1HO_lTck5LBulSgHaFp?pid=Api&amp;rs=1" target="_blank" rel="noopener">首页图片</a><br>[2] <a href="https://www.zhihu.com/question/26441147" target="_blank" rel="noopener">泊松分布的现实意义是什么，为什么现实生活多数服从于泊松分布？</a></p>]]></content>
    
    
    <categories>
      
      <category>概率统计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>概率统计基础</tag>
      
      <tag>概率分布</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Restart!</title>
    <link href="/2020/04/27/Restart/"/>
    <url>/2020/04/27/Restart/</url>
    
    <content type="html"><![CDATA[<p>从零开始我的个人博客！</p><a id="more"></a><p>一年前已经成功搭建此博客，但是我在调整博客主题时把它搞成404了（泪目），于是重新搭建了，那么就从零restart吧！</p><h3><span id="参考">参考</span></h3><p>[1] <a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">使用hexo+github搭建免费个人博客详细教程</a><br>[2] <a href="https://wangcong.net/article/HexoWihLaTeX.html" target="_blank" rel="noopener">Hexo中Latex公式渲染</a><br>[3] <a href="https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2">创建分类页面</a><br>[4] <a href="https://www.jianshu.com/p/70e46dc95676" target="_blank" rel="noopener">设定代码高亮格式</a><br>[5] <a href="https://bing.ioliu.cn/photo/MalhamStars_ZH-CN4163177154?force=home_6" target="_blank" rel="noopener">博客首页图片</a></p>]]></content>
    
    
    <categories>
      
      <category>无从属</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
