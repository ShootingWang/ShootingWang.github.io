<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>R</title>
    <link href="/2020/05/11/R/"/>
    <url>/2020/05/11/R/</url>
    
    <content type="html"><![CDATA[<p>R语言<br><a id="more"></a></p><h1><span id="base">base</span></h1><h2><span id="merge">merge</span></h2><p>合并两个数据框（DataFrame）</p><pre><code class="lang-R">merge(x, y, by = intersect(names(x), names(y)),      by.x = by, by.y = by, all = FALSE, all.x = all, all.y = all,      sort = TRUE, suffixes = c(&quot;.x&quot;,&quot;.y&quot;), no.dups = TRUE,      incomparables = NULL, ...)</code></pre><ul><li><code>all=FALSE</code>：相当于<code>natural join</code>，仅返回匹配的行</li><li><code>all=TRUE</code>：相当于<code>full outer join</code></li><li><code>all.x=TRUE</code>：相当于<code>left outer join</code></li><li><code>all.y=TRUE</code>：相当于<code>right outer join</code></li></ul><pre><code class="lang-R">x &lt;- data.frame(k1 = c(NA,NA,3,4,5), k2 = c(1,NA,NA,4,5), data = 1:5)x#  k1 k2 data#1 NA  1    1#2 NA NA    2#3  3 NA    3#4  4  4    4#5  5  5    5y &lt;- data.frame(k1 = c(NA,2,NA,4,5), k2 = c(NA,NA,3,4,5), data = 1:5)y#  k1 k2 data#1 NA NA    1#2  2 NA    2#3 NA  3    3#4  4  4    4#5  5  5    5merge(x, y, by = c(&quot;k1&quot;,&quot;k2&quot;)) # NA&#39;s match#  k1 k2 data.x data.y#1  4  4      4      4#2  5  5      5      5#3 NA NA      2      1merge(x, y, by = &quot;k1&quot;) # NA&#39;s match, so 6 rows#  k1 k2.x data.x k2.y data.y#1  4    4      4    4      4#2  5    5      5    5      5#3 NA    1      1   NA      1#4 NA    1      1    3      3#5 NA   NA      2   NA      1#6 NA   NA      2    3      3merge(x, y, by = &quot;k2&quot;, incomparables = NA) # 2 rows#  k2 k1.x data.x k1.y data.y#1  4    4      4    4      4#2  5    5      5    5      5</code></pre><h2><span id="paste">paste</span></h2><p>组合字符串</p><ul><li>可以将任意数量的参数组合在一起<pre><code class="lang-R">paste(..., sep = &quot; &quot;, collapse = NULL)</code></pre></li><li><code>...</code>：要组合的任何数量的参数</li><li><code>sep</code>：表示参数之间的分隔符</li><li><code>collapse</code>：用于消除两个字符串之间的空间；但不是在一个字符串的两个词的空间</li></ul><pre><code class="lang-R">(nth &lt;- paste0(1:12, c(&quot;st&quot;, &quot;nd&quot;, &quot;rd&quot;, rep(&quot;th&quot;, 9))))# [1] &quot;1st&quot;  &quot;2nd&quot;  &quot;3rd&quot;  &quot;4th&quot;  &quot;5th&quot;  &quot;6th&quot;  &quot;7th&quot;  &quot;8th&quot;  &quot;9th&quot;  &quot;10th&quot; &quot;11th&quot; &quot;12th&quot;month.abb# [1] &quot;Jan&quot; &quot;Feb&quot; &quot;Mar&quot; &quot;Apr&quot; &quot;May&quot; &quot;Jun&quot; &quot;Jul&quot; &quot;Aug&quot; &quot;Sep&quot; &quot;Oct&quot; &quot;Nov&quot; &quot;Dec&quot;paste(month.abb, &quot;is the&quot;, nth, &quot;month of the year.&quot;)# [1] &quot;Jan is the 1st month of the year.&quot;  &quot;Feb is the 2nd month of the year.&quot; # [3] &quot;Mar is the 3rd month of the year.&quot;  &quot;Apr is the 4th month of the year.&quot; # [5] &quot;May is the 5th month of the year.&quot;  &quot;Jun is the 6th month of the year.&quot; # [7] &quot;Jul is the 7th month of the year.&quot;  &quot;Aug is the 8th month of the year.&quot; # [9] &quot;Sep is the 9th month of the year.&quot;  &quot;Oct is the 10th month of the year.&quot;#[11] &quot;Nov is the 11th month of the year.&quot; &quot;Dec is the 12th month of the year.&quot;letters# [1] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot; &quot;h&quot; &quot;i&quot; &quot;j&quot; &quot;k&quot; &quot;l&quot; &quot;m&quot; &quot;n&quot; &quot;o&quot; &quot;p&quot; &quot;q&quot; &quot;r&quot; &quot;s&quot; &quot;t&quot; &quot;u&quot; &quot;v&quot;#[23] &quot;w&quot; &quot;x&quot; &quot;y&quot; &quot;z&quot;paste(month.abb, letters)# [1] &quot;Jan a&quot; &quot;Feb b&quot; &quot;Mar c&quot; &quot;Apr d&quot; &quot;May e&quot; &quot;Jun f&quot; &quot;Jul g&quot; &quot;Aug h&quot; &quot;Sep i&quot; &quot;Oct j&quot; &quot;Nov k&quot;#[12] &quot;Dec l&quot; &quot;Jan m&quot; &quot;Feb n&quot; &quot;Mar o&quot; &quot;Apr p&quot; &quot;May q&quot; &quot;Jun r&quot; &quot;Jul s&quot; &quot;Aug t&quot; &quot;Sep u&quot; &quot;Oct v&quot;#[23] &quot;Nov w&quot; &quot;Dec x&quot; &quot;Jan y&quot; &quot;Feb z&quot;</code></pre><h1><span id="packages">Packages</span></h1><pre><code class="lang-R"></code></pre><pre><code class="lang-R"></code></pre><pre><code class="lang-R"></code></pre><pre><code class="lang-R"></code></pre><h1><span id="参考资料">参考资料</span></h1><p>[1] <a href="https://cn.bing.com/images/search?view=detailV2&amp;ccid=y7PQyqXC&amp;id=617BD652FC2012861BB5E27035D4C092C9467682&amp;thid=OIP.y7PQyqXC-XCIFzc0BC5JawHaHa&amp;mediaurl=https%3a%2f%2fwww.rstudio.com%2fwp-content%2fuploads%2f2019%2f02%2frstudio-og.png&amp;exph=1200&amp;expw=1200&amp;q=Rstudio&amp;simid=607993942360785821&amp;selectedIndex=18" target="_blank" rel="noopener">首页缩略图</a><br>[] <a href="https://blog.csdn.net/neweastsun/article/details/79435271" target="_blank" rel="noopener">使用R中merge()函数合并数据</a><br>[] <a href="https://www.cnblogs.com/csguo/p/7294057.html" target="_blank" rel="noopener">R语言paste函数</a><br>[] <a href></a><br>[] <a href></a><br>[] <a href></a></p>]]></content>
    
    
    <categories>
      
      <category>软件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>概率统计基础</title>
    <link href="/2020/05/09/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E5%9F%BA%E7%A1%80/"/>
    <url>/2020/05/09/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<p>概率论与数理统计</p><a id="more"></a><h1><span id="概率论基础">概率论基础</span></h1><h2><span id="函数">函数</span></h2><h3><span id="beta函数">Beta函数</span></h3><script type="math/tex; mode=display">B(\alpha, \beta)=\int_0^1 x^{\alpha-1}(1-x)^{\beta-1}\mathrm{d}x ,\quad \alpha,\beta>0</script><ul><li>$B(\alpha,\beta)=\frac{\Gamma(\alpha)\Gamma(\beta)}{\Gamma(\alpha+\beta)}$<br>证明：</li></ul><h3><span id="gamma函数">Gamma函数</span></h3><script type="math/tex; mode=display">\Gamma(\alpha)=\int_0^{+\infty}x^{\alpha-1}e^{-x}\mathrm{d}x ,\quad \alpha>0</script><ul><li>$\Gamma(\alpha+1)=\alpha\Gamma(\alpha)$</li><li>$\Gamma(n+1)=n!,\quad n\in \mathbb{N}$.</li></ul><h2><span id="随机变量">随机变量</span></h2><h3><span id="期望">期望</span></h3><ul><li><strong>条件均值</strong>（Conditional Mean）：<script type="math/tex; mode=display">E\left(X|Y=y\right)=\int xf_{X|Y}(x|y)\mathrm{d}x</script></li><li>条件方差<script type="math/tex; mode=display">Var\left(X|Y=y\right)=\int \left[x-E\left(X|Y=y \right)\right]^2f_{X|Y}(x|y)\mathrm{d}x</script></li><li>重期望<script type="math/tex; mode=display">E(X)=E\left[E\left(X|Y\right) \right]</script></li><li><script type="math/tex; mode=display">Var(X)=E\left[Var(X|Y) \right]+Var\left[E\left(X|Y \right)\right]</script></li></ul><h2><span id="分布">分布</span></h2><ul><li><strong>概率密度函数</strong>（pdf，probability density function）</li></ul><h3><span id="贝塔分布">贝塔分布</span></h3><p>Beta Distribution<br>$X\sim B(\alpha, \beta)$, 则$X$的概率密度函数为</p><script type="math/tex; mode=display">f_X(x)=\frac{1}{B(\alpha,\beta)}x^{\alpha-1}(1-x)^{\beta-1},\quad 0< x < 1</script><ul><li><p>$E(X)=\frac{\alpha}{\alpha+\beta}$</p><font face="仿宋">\begin{equation}\begin{aligned}E(X)&=\int_0^1 x\frac{1}{B(\alpha,\beta)}x^{\alpha-1}(1-x)^{\beta-1}\mathrm{d}x\\&=\end{aligned}\end{equation}</font></li><li><p>$Var(X)=\frac{\alpha\beta}{(\alpha+\beta)^2(\alpha+\beta+1)}$</p></li></ul><h3><span id="泊松分布">泊松分布</span></h3><ul><li><a href="/2020/04/27/%E6%B3%8A%E6%9D%BE%E5%88%86%E5%B8%83/" title="泊松分布">泊松分布</a></li></ul><h3><span id="伽马分布">伽马分布</span></h3><p>Gamma Distribution<br>$X\sim \Gamma(\alpha, \beta)$, 则$X$的概率密度函数为</p><script type="math/tex; mode=display">f_X(x)=\frac{\beta^{\alpha}}{\Gamma(\alpha)}x^{\alpha-1}e^{-\beta x},\quad x>0</script><ul><li>$E(X)=\frac{\alpha}{\beta}$</li><li>$Var(X)=\frac{\alpha}{\beta^2}$</li></ul><h1><span id="数理统计基础">数理统计基础</span></h1><h1><span id="参考资料">参考资料</span></h1>]]></content>
    
    
    <categories>
      
      <category>概率统计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>概率统计基础</tag>
      
      <tag>概率分布</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JAVA</title>
    <link href="/2020/05/08/JAVA%E5%AD%A6%E4%B9%A0/"/>
    <url>/2020/05/08/JAVA%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>JAVA小白的学习之路</p><a id="more"></a><h1><span id="安装">安装</span></h1><h2><span id="安装java">安装JAVA</span></h2><ul><li><a href="https://courses.edx.org/courses/course-v1:Microsoft+DEV285x+3T2019/courseware/a8a0bb660fda4b71b4c7439aa4a07dae/16d23967e4514f7fa6a3e78a3edfc0eb/?child=first" target="_blank" rel="noopener">安装JAVA和IDE</a></li></ul><h2><span id="安装ide">安装IDE</span></h2><ul><li><a href="https://www.jetbrains.com/idea/download/download-thanks.html?platform=windows&amp;code=IIC" target="_blank" rel="noopener">IntelliJ IDEA下载</a></li></ul><h1><span id="参考资料">参考资料</span></h1><p>[1] <a href="https://cn.bing.com/images/search?view=detailV2&amp;ccid=zThJuq%2bC&amp;id=474DFD30EC584147A5C8FC0F10952D615CF2795A&amp;thid=OIP.zThJuq-CIVq3uElNx7mDVQHaEK&amp;mediaurl=https%3a%2f%2fwww.vizteams.com%2fwp-content%2fuploads%2f2015%2f07%2fjava-logo.png&amp;exph=576&amp;expw=1024&amp;q=java&amp;simid=608020279042638133&amp;selectedIndex=2" target="_blank" rel="noopener">首页缩略图</a><br>[2] <a href></a><br>[3] <a href></a><br>[4] <a href></a></p>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Algorithms and Data Structures</title>
    <link href="/2020/05/04/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    <url>/2020/05/04/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>Basic!</p><a id="more"></a><h1><span id="算法">算法</span></h1><p>一个算法应该是<u>问题求解步骤的描述</u></p><blockquote><p>Algorithm by definition is precise steps that describes the solution of a certain task or a problem.</p><p><strong>算法</strong>（algorithm）是对特定问题求解步骤的一种描述，是指令的有序序列，其中每一条指令表示一个或多个操作。</p></blockquote><p>算法具有5个基本特征：</p><ol><li>有穷性</li><li>确定性</li><li>可行性</li><li>输入（$\geq 0$）</li><li>输出（$\geq 1$）</li></ol><h2><span id="查找方法">查找方法</span></h2><ul><li><a href="/2020/05/04/%E4%BA%8C%E5%88%86%E6%B3%95/" title="简单查找">简单查找</a></li><li><a href="/2020/05/04/%E4%BA%8C%E5%88%86%E6%B3%95/" title="二分查找">二分查找</a><blockquote><ul><li>二分查找的速度比简单查找快得多</li><li>$O(\log{n})$比$O(n)$快</li></ul></blockquote></li></ul><h2><span id="排序方法">排序方法</span></h2><ul><li><a href="/2020/05/05/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/" title="选择排序">选择排序</a></li><li><a href="/2020/05/05/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/" title="快速排序">快速排序</a></li><li></li></ul><h2><span id="图相关">图相关</span></h2><ul><li><a href="/2020/05/05/BFS/" title="广度优先搜索">广度优先搜索</a><ul><li>用于在非加权图中查找最短路径 </li></ul></li><li><a href="/2020/05/05/%E7%8B%84%E5%85%8B%E6%96%AF%E7%89%B9%E6%8B%89%E7%AE%97%E6%B3%95/" title="狄克斯特拉算法">狄克斯特拉算法</a><ul><li>Dijkstra’s Algorithm</li><li>用于在加权图中查找最短路径</li><li>不能用于包含负权边的图</li></ul></li><li><a href="/2020/05/05/%E8%B4%9D%E5%B0%94%E6%9B%BC-%E7%A6%8F%E5%BE%B7%E7%AE%97%E6%B3%95/" title="贝尔曼-福德算法">贝尔曼-福德算法</a><ul><li>用于含负权边的加权图查找最短路径</li></ul></li><li><a href="/2020/05/05/%E8%B4%AA%E5%A9%AA%E7%AE%97%E6%B3%95/" title="贪婪算法">贪婪算法</a></li></ul><h2><span id> </span></h2><ul><li><a href="/2020/05/05/%E9%80%92%E5%BD%92/" title="递归">递归</a></li><li><a href="/2020/05/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/" title="背包问题">背包问题</a><ul><li><a href="/2020/05/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/" title="动态规划">动态规划</a></li></ul></li></ul><h2><span id="数据结构">数据结构</span></h2><ul><li><a href="/2020/05/06/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/" title="数据结构">数据结构</a><ul><li><a href="/2020/05/01/%E6%A0%91/" title="树">树</a></li><li></li></ul></li></ul><h1><span id="通用知识">通用知识</span></h1><h2><span id="运行时间">运行时间</span></h2><ul><li>算法运行时间并不以秒为单位</li><li>算法运行时间是从其增速的角度度量的</li><li>算法运行时间用<strong>大O表示法</strong>表示</li></ul><h3><span id="大o表示法">大O表示法</span></h3><ul><li>指出了算法运行时间的增速<blockquote><p>表示的并非是以秒为单位的速度</p></blockquote></li><li>指出了最糟情况下的运行时间</li></ul><p>常见的<strong>大O运行时间</strong>：</p><ul><li>$O(\log{n})$：对数时间<ul><li>二分查找</li></ul></li><li>$O(n)$：线性时间<ul><li>简单查找</li></ul></li><li>$O(n\log{n})$<ul><li>快速排序</li></ul></li><li>$O(n^2)$<ul><li>选择排序</li></ul></li><li>$O(n!)$<ul><li>旅行商问题</li></ul></li></ul><p>算法的运行时间通常有个<strong>常量</strong>$c$，表示算法所需的固定时间</p><blockquote><p>如：简单查找的运行时间为10ms$*n$，二分查找的运行时间为1s$*\log{n}$。其中，10ms和1s都是常量</p></blockquote><ul><li>通常情况下，常量几乎没什么影响</li><li>但有时候，常量的影响可能很大<blockquote><p>如：运行时间都为$O(n\log{n})$的快速排序和合并排序，快速排序将会快很多</p></blockquote></li></ul><p>常见的数组和链表操作的运行时间：</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">数组</th><th style="text-align:center">链表</th></tr></thead><tbody><tr><td style="text-align:center">读取</td><td style="text-align:center">$O(1)$<sup><a href="#fn_1" id="reffn_1">1</a></sup></td><td style="text-align:center">$O(n)$<sup><a href="#fn_2" id="reffn_2">2</a></sup></td></tr><tr><td style="text-align:center">插入</td><td style="text-align:center">$O(n)$<sup><a href="#fn_3" id="reffn_3">3</a></sup></td><td style="text-align:center">$O(1)$<sup><a href="#fn_4" id="reffn_4">4</a></sup></td></tr><tr><td style="text-align:center">删除</td><td style="text-align:center">$O(n)$<sup><a href="#fn_5" id="reffn_5">5</a></sup></td><td style="text-align:center">$O(1)$<sup><a href="#fn_6" id="reffn_6">6</a></sup></td></tr></tbody></table></div><blockquote id="fn_1"><sup>1</sup>. 数组的元素的位置都已知，直接根据索引读取某元素<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><blockquote id="fn_2"><sup>2</sup>. 要访问链表的某个元素，必须先访问第一个元素以获得第二个元素的地址，再访问第二个元素以获得第三个元素的地址，……<a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a></blockquote><blockquote id="fn_3"><sup>3</sup>. 在数组中插入元素时，必须将后面的元素都向后移<a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a></blockquote><blockquote id="fn_4"><sup>4</sup>. 在链表中插入元素，只需修改那个元素指向的位置<a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a></blockquote><blockquote id="fn_5"><sup>5</sup>. 删除数组的某个元素后，该元素后的所有元素都需要向前移<a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a></blockquote><blockquote id="fn_6"><sup>6</sup>. 链表的第一个元素和最后一个元素已知，删除这些元素的运行时间为$O(1)$<a href="#reffn_6" title="Jump back to footnote [6] in the text."> &#8617;</a></blockquote><ul><li>数组擅长随机访问</li><li>链表擅长插入和删除</li></ul><h1><span id="参考资料">参考资料</span></h1><p>[1] <a href="https://tse1-mm.cn.bing.net/th/id/OIP.7h7LM5AhzNGHuM9T73jq1QHaEl?w=300&amp;h=178&amp;c=7&amp;o=5&amp;dpr=1.5&amp;pid=1.7" target="_blank" rel="noopener">首页缩略图</a><br>[2] <a href="https://book.douban.com/subject/26979890/" target="_blank" rel="noopener">图解算法</a></p>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>基础算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>基础算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>假设检验</title>
    <link href="/2020/05/04/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C/"/>
    <url>/2020/05/04/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<p>Hypothesis Testing</p><a id="more"></a><h1><span id="hypothesis">Hypothesis</span></h1><h2><span id="error">Error</span></h2><ul><li><strong>type Ⅰ Error</strong><br>   $H_0$ is true but reject $H_0$<script type="math/tex; mode=display">\alpha=P(H_1|H_0)</script>   错误拒绝</li><li><strong>type Ⅱ Error</strong><br>   $H_0$ is not true but accept $H_0$<script type="math/tex; mode=display">P(H_0|H_1)</script>   错误接受</li></ul><h1><span id="检验方法">检验方法</span></h1><h2><span id="参数检验">参数检验</span></h2><ul><li>两均值对比<ul><li>Z检验<blockquote><p>适用于样本量大、总体方差已知的样本</p></blockquote></li><li><a href="/2020/05/04/t%E6%A3%80%E9%AA%8C/" title="t检验">t检验</a><blockquote><p>适用于样本量小、总体方差未知的样本</p></blockquote></li></ul></li></ul><h2><span id="非参数检验">非参数检验</span></h2><ul><li>两均值对比<ul><li><a href="/2020/05/04/U%E6%A3%80%E9%AA%8C/" title="Mann-Whitney U检验">Mann-Whitney U检验</a></li></ul></li></ul><p><meta name="referrer" content="no-referrer"><br><img src="/2020/05/04/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C/howtochoose.png" srcset="/img/loading.gif" class title="What Test?"></p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">功能</th><th style="text-align:center">正态性</th><th style="text-align:center">不服从正态分布时</th><th style="text-align:center">方差齐性</th></tr></thead><tbody><tr><td style="text-align:center">单样本t检验</td><td style="text-align:center">与某数字对比</td><td style="text-align:center">服从正态分布</td><td style="text-align:center">单样本Wilcoxon检验</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">配对样本t检验</td><td style="text-align:center">配对数据差异</td><td style="text-align:center">差值服从正态分布</td><td style="text-align:center">配对Wilcoxon检验</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">独立样本t检验</td><td style="text-align:center">两组数据的差异</td><td style="text-align:center">两组数据都服从正态分布</td><td style="text-align:center">Mann-Whitney U检验</td><td style="text-align:center">要求同方差</td></tr></tbody></table></div><h1><span id="参考资料">参考资料</span></h1><p>[1] <a href="https://tse3-mm.cn.bing.net/th/id/OIP.Kswu83OuyrC-6NiH646D-QHaGg?w=222&amp;h=160&amp;c=7&amp;o=5&amp;dpr=1.5&amp;pid=1.7" target="_blank" rel="noopener">首页缩略图</a><br>[2] <a href="https://www.skillsyouneed.com/num/statistics-identifying-patterns.html" target="_blank" rel="noopener">Statistical Analysis: Identifying Patterns</a><br>[3] <a href="https://zhuanlan.zhihu.com/p/68736699" target="_blank" rel="noopener">三种T检验的详细区分</a></p>]]></content>
    
    
    <categories>
      
      <category>概率统计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>概率统计基础</tag>
      
      <tag>检验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编程题库</title>
    <link href="/2020/05/04/%E7%BC%96%E7%A8%8B%E9%A2%98%E5%BA%93/"/>
    <url>/2020/05/04/%E7%BC%96%E7%A8%8B%E9%A2%98%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<p>编程刷题记录</p><a id="more"></a><h1><span id="huawei">HUAWEI</span></h1><ul><li><a href="/2020/05/06/HUAWEI%E9%A2%98%E5%BA%93/" title="HUAWEI相关编程题库">HUAWEI相关编程题库</a></li></ul><h1><span id="pinduoduo">PINDUODUO</span></h1><ul><li><a href="/2020/05/06/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E9%A2%98%E5%BA%93/" title="PinDuoDuo相关编程题库">PinDuoDuo相关编程题库</a></li></ul><h1><span id="无从属">无从属</span></h1><h2><span id="质数素数">质数/素数</span></h2><pre><code class="lang-Python">## 列出小于整数n的所有质数## 不导入模块n = 20[i for i in range(2, n) if 0 not in [i%j for j in range(2, int(i**0.5) + 1)]]# [2, 3, 5, 7, 11, 13, 17, 19]## 使用Python的模块[i for i in range(2, n) if 0 not in [i%j for j in range(2, int(math.sqrt(i)) + 1)]]# [2, 3, 5, 7, 11, 13, 17, 19]</code></pre><h2><span id="最大乘积">最大乘积</span></h2><ul><li>给定一个无序数组，包含正数、负数和0，要求从中找出3个数的乘积，使得乘积最大，要求时间复杂度：O(n)，空间复杂度：O(1)</li><li>输入共2行，第一行包括一个整数n，表示数组长度</li><li>第二行为n个以空格隔开的整数，分别为A1,A2, … ,An<blockquote><p>拼多多2018年校招内推编程题</p></blockquote></li></ul><pre><code class="lang-Python">while True:    try:        n = int(input())        lst = list(map(int, input().split()))        lst.sort()        print(max(lst[0]*lst[1]*lst[-1], lst[-3]*lst[-2]*lst[-1]))    except:        break</code></pre><h1><span id> </span></h1><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><h1><span id> </span></h1><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><h1><span id> </span></h1><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><h1><span id="参考资料">参考资料</span></h1><p>[1] <a href="https://cn.bing.com/images/search?view=detailV2&amp;ccid=8hu8uJ6w&amp;id=03F94B8D85C64E6F1EF23C9F3C91DB4C8F5822D3&amp;thid=OIP.8hu8uJ6wIQFmKueeKunj0wHaE8&amp;mediaurl=https%3a%2f%2fimages.idgesg.net%2fimages%2farticle%2f2019%2f02%2fabstract_binary_code_background_arrows_coding_programming_analytics_data_transfer_by_aleksei_derin_gettyimages-914850304_2400x1600-100788496-large.3x2.jpg&amp;exph=800&amp;expw=1200&amp;q=code&amp;simid=607994049680312069&amp;selectedIndex=6" target="_blank" rel="noopener">首页缩略图</a></p>]]></content>
    
    
    <categories>
      
      <category>藏宝库</category>
      
      <category>题库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python</title>
    <link href="/2020/05/03/Python/"/>
    <url>/2020/05/03/Python/</url>
    
    <content type="html"><![CDATA[<p>Python使用手册</p><a id="more"></a><h1><span id="基础">基础</span></h1><ul><li><a href="/2020/05/10/python-%E5%91%BD%E5%90%8D%E6%96%B9%E5%BC%8F/" title="命名方式">命名方式</a></li><li><a href="/2020/05/03/python-4-%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7/" title="运算符">运算符</a></li><li><a href="/2020/05/03/python-5-%E5%87%BD%E6%95%B0/" title="函数">函数</a></li><li><a href="/2020/05/03/python-6-%E5%BE%AA%E7%8E%AF/" title="循环">循环</a></li><li><a href="/2020/05/03/python-8-%E6%A8%A1%E5%9D%97/" title="模块">模块</a></li></ul><h1><span id="数据类型">数据类型</span></h1><ul><li><a href="/2020/05/10/python-%E5%AD%97%E7%AC%A6%E4%B8%B2/" title="字符串">字符串</a></li></ul><pre><code class="lang-Python">lst1 = [1, 2, 3]  ## 可变对象lst2 = lst1  ## 引用传递lst1.append(5)lst2# [1, 2, 3, 5]## 不可变对象为值传递</code></pre><pre><code class="lang-Python"></code></pre><h1><span id="模块">模块</span></h1><h2><span id="pip">pip</span></h2><a href="/2020/05/09/python-pip/" title="pip">pip</a><h2><span id="collections">collections</span></h2><a href="/2020/05/05/python-collections%E6%A8%A1%E5%9D%97/" title="collections模块">collections模块</a><h2><span id="keras">keras</span></h2><a href="/2020/05/10/python-keras/" title="keras模块">keras模块</a><h2><span id="numpy">NumPy</span></h2><a href="/2020/05/10/python-numpy%E6%A8%A1%E5%9D%97/" title="NumPy">NumPy</a><h2><span id="pyecharts">pyecharts</span></h2><a href="/2020/05/08/python-pyecharts%E6%A8%A1%E5%9D%97/" title="pyecharts模块">pyecharts模块</a><h2><span id="re">re</span></h2><a href="/2020/05/03/python-re%E6%A8%A1%E5%9D%97/" title="re模块">re模块</a>]]></content>
    
    
    <categories>
      
      <category>软件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Machine Learning-汇总</title>
    <link href="/2020/05/02/Machine-Learning-%E6%B1%87%E6%80%BB/"/>
    <url>/2020/05/02/Machine-Learning-%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<p>Machine Learning 算法汇总</p><a id="more"></a><h1><span id="machine-learning">Machine Learning</span></h1><ul><li>Classical Learning<ul><li>Supervised Learning</li><li>Unsupervised Learning</li></ul></li><li>Ensemble Methods<ul><li>Bagging</li><li>Boosting</li><li>Stacking</li></ul></li><li>Reinforcement Learning</li><li>Neural Networks and Deep Learning</li></ul><h2><span id="classical-learning">Classical Learning</span></h2><ul><li>Supervised Learning<ul><li>Classification</li><li>Regression</li></ul></li><li>Unsupervised Learning<ul><li>Clustering</li><li>Pattern Search</li><li>Dimension Reduction</li></ul></li></ul><h3><span id="supervised-learning">Supervised Learning</span></h3><h4><span id="classification">Classification</span></h4><ul><li>K-NN</li><li>Naive Bayes</li><li>SVM</li><li>Decision Tree</li><li>Logistic Regression</li></ul><a href="/2020/05/12/Machine-Learning-%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0/" title="分类模型评估">分类模型评估</a><h5><span id="k-nn">K-NN</span></h5><h5><span id="naive-bayes">Naive Bayes</span></h5><ul><li><a href="/2020/05/11/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/" title="朴素贝叶斯">朴素贝叶斯</a></li></ul><h5><span id="svm">SVM</span></h5><ul><li><a href="/2020/04/28/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/" title="支持向量机">支持向量机</a> Support Vector Machine</li></ul><h5><span id="decision-tree">Decision Tree</span></h5><ul><li><a href="/2020/04/28/%E5%86%B3%E7%AD%96%E6%A0%91/" title="决策树">决策树</a></li></ul><h5><span id="logistic-regression">Logistic Regression</span></h5><h4><span id="regression">Regression</span></h4><ul><li>Linear Regression</li><li>Ridge/Lasso Regression</li></ul><h5><span id="linear-regression">Linear Regression</span></h5><ul><li><a href="/2020/05/04/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/" title="线性回归">线性回归</a></li></ul><h5><span id="ridgelasso-regression">Ridge/Lasso Regression</span></h5><h3><span id="unsupervised-learning">Unsupervised Learning</span></h3><h4><span id="clustering">Clustering</span></h4><ul><li>K-Means</li><li>Mean-Shift</li><li>DBSCAN</li><li>OPTICS</li><li>Agglomerative</li><li>Fuzzy C-Means</li></ul><a href="/2020/05/11/Machine-Learning-%E8%81%9A%E7%B1%BB%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0/" title="聚类模型评估">聚类模型评估</a><h5><span id="k-means">K-Means</span></h5><h5><span id="mean-shift">Mean-Shift</span></h5><h5><span id="dbscan">DBSCAN</span></h5><h5><span id="optics">OPTICS</span></h5><h5><span id="agglomerative">Agglomerative</span></h5><h5><span id="fuzzy-c-means">Fuzzy C-Means</span></h5><h4><span id="pattern-search">Pattern Search</span></h4><ul><li>Euclat</li><li>Apriori</li><li>FP-Growth</li></ul><h5><span id="euclat">Euclat</span></h5><h5><span id="apriori">Apriori</span></h5><h5><span id="fp-growth">FP-Growth</span></h5><h4><span id="dimension-reduction">Dimension Reduction</span></h4><ul><li>t-SNE</li><li>PCA</li><li>LSA</li><li>SVD</li><li>LDA</li></ul><h5><span id="t-sne">t-SNE</span></h5><h5><span id="pca">PCA</span></h5><h5><span id="lsa">LSA</span></h5><h5><span id="svd">SVD</span></h5><h5><span id="lda">LDA</span></h5><h2><span id="ensemble-methods">Ensemble Methods</span></h2><a href="/2020/05/11/%E9%9B%86%E6%88%90%E6%96%B9%E6%B3%95/" title="集成方法">集成方法</a><ul><li>Bagging</li><li>Boosting</li><li>Stacking</li></ul><h4><span id="bagging">Bagging</span></h4><ul><li>Random Forest</li></ul><h5><span id="random-forest">Random Forest</span></h5><ul><li><a href="/2020/04/28/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/" title="随机森林">随机森林</a></li></ul><h4><span id="boosting">Boosting</span></h4><ul><li>AdaBoost</li><li>XGBoost</li><li>LightGBM</li><li>CatBoost</li><li>Boosting Tree（提升树）</li></ul><h5><span id="adaboost">AdaBoost</span></h5><h5><span id="xgboost">XGBoost</span></h5><h5><span id="lightgbm">LightGBM</span></h5><h5><span id="catboost">CatBoost</span></h5><h4><span id="stacking">Stacking</span></h4><h2><span id="reinforcement-learning">Reinforcement Learning</span></h2><ul><li>Genetic Algorithm</li><li>A3C</li><li>SARSA</li><li>Q-Learning</li><li>DQN</li></ul><h3><span id="genetic-algorithm">Genetic Algorithm</span></h3><h3><span id="a3c">A3C</span></h3><h3><span id="sarsa">SARSA</span></h3><h3><span id="q-learning">Q-Learning</span></h3><h3><span id="dqn">DQN</span></h3><p>Deep Q-Network</p><h2><span id="neural-nets-and-deep-learning">Neural Nets and Deep Learning</span></h2><ul><li>CNN</li><li>RNN</li><li>GAN</li><li>Autoencoders</li><li>MLP</li></ul><h3><span id="cnn">CNN</span></h3><h3><span id="rnn">RNN</span></h3><ul><li>LSM</li><li>LSTM</li><li>GRU</li></ul><h4><span id="lsm">LSM</span></h4><h4><span id="lstm">LSTM</span></h4><h4><span id="gru">GRU</span></h4><ul><li>GAN</li><li>Autoencoders</li><li>Perceptrons (MLP)</li></ul><h3><span id="gan">GAN</span></h3><p>Generative Adversarial Nerworks</p><h3><span id="autoencoders">Autoencoders</span></h3><p>seq2seq</p><h3><span id="perceptrons-mlp">Perceptrons (MLP)</span></h3><h1><span id="参考资料">参考资料</span></h1><p>[1] <a href="https://cn.bing.com/images/search?view=detailV2&amp;ccid=k5LiTi5l&amp;id=95DF77DEC29B1CD7083F9435F1AE55043B0C0081&amp;thid=OIP.k5LiTi5lt_ND02kaBT_SAAHaE7&amp;mediaurl=https%3a%2f%2fwww.smartdatacollective.com%2fwp-content%2fuploads%2f2018%2f11%2fMachine-learning-1024x682.jpg&amp;exph=682&amp;expw=1024&amp;q=machine+learning&amp;simid=608018054240865990&amp;selectedIndex=3" target="_blank" rel="noopener">首页缩略图</a></p>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>机器学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据分析业务向-问题和方法汇总</title>
    <link href="/2020/05/02/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%9A%E5%8A%A1%E5%90%91-%E9%97%AE%E9%A2%98%E5%92%8C%E6%96%B9%E6%B3%95%E6%B1%87%E6%80%BB/"/>
    <url>/2020/05/02/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%9A%E5%8A%A1%E5%90%91-%E9%97%AE%E9%A2%98%E5%92%8C%E6%96%B9%E6%B3%95%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<p>Data Analyst<br><a id="more"></a></p><h1><span id="数据分析">数据分析</span></h1><p>数据分析的<strong>本质</strong>是<u>解决某一个业务问题</u>。</p><p>数据分析的步骤：</p><ol><li>明确分析的目的</li><li>要了解数据来源的相关信息，包括各项指标的定义、采集点和上报机制<sup><a href="#fn_1" id="reffn_1">1</a></sup></li><li></li></ol><blockquote id="fn_1"><sup>1</sup>. 上报机制：是指数据上报的时机、内容和技术实现形式<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><p>在数据来源正确的前提下，进行数据分析的方法可分为</p><ul><li><strong>定性分析</strong>：对事物的性质作出判断——“是什么”</li><li><strong>定量分析</strong>：对事物的数量作出统计——“有多少”</li></ul><p>数据分析就是定性分析与定量分析相互结合、不断验证的过程。<br>提出假设、设计方案、分析数据、验证或推翻假设，最后抽丝剥茧，逐渐接近真相。</p><p><strong>用户研究</strong>：通过对网站访问量、应用行为统计登数据的分析，从中发现用户使用产品的情况，从中总结出一定的规律和趋势，供其他部门（市场营销、产品规划等）制定决策用。</p><h1><span id="问题">问题</span></h1><ul><li><a href="/2020/05/01/%E8%B4%B9%E7%B1%B3%E9%97%AE%E9%A2%98/" title="费米问题">费米问题</a></li><li><a href="/2020/05/02/%E6%8C%87%E6%A0%87%E5%BC%82%E5%8A%A8%E7%B1%BB%E9%97%AE%E9%A2%98/" title="指标异动类问题">指标异动类问题</a></li><li><a href="/2020/05/02/VIP%E4%BC%9A%E5%91%98%E5%A5%97%E9%A4%90%E5%AE%9A%E4%BB%B7%E7%AD%96%E7%95%A5/" title="VIP会员套餐定价策略">VIP会员套餐定价策略</a></li><li></li></ul><h1><span id="方法">方法</span></h1><ul><li><a href="/2020/05/07/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-AARRR%E6%A8%A1%E5%9E%8B/" title="AARRR模型">AARRR模型</a></li></ul><h1><span id="指标定义">指标/定义</span></h1><blockquote><p>优先按照英文排序；若无英文，则按中文排序</p></blockquote><ul><li><strong>获客成本</strong>（CAC，）</li><li>询盘（Enquiry / Inquiry）：买方（或卖方）为了购买（或销售）某项商品，向对方询问有关交易条件的表示。在国际贸易的实际业务中，一般多由买方主动向卖方发出询盘。</li><li>询盘量：有意向购买的卖家发给卖家的询盘的数量</li><li>访问路径（FR，Flow Report）：用户在网站上的访问行为，各个页面的进入率和跳出率</li><li><strong>IP</strong>（Internet Protocol）：访问过该网站的IP总数；以用户的IP地址作为统计依据。<ul><li>同一天00:00-24:00内相同IP地址仅计算一次</li></ul></li><li><strong>用户生命周期价值</strong>（LTV）</li><li>最小可行性产品（MVP）</li><li><strong>客单价</strong>（Per Customer Transaction）：平均交易金额/顾客平均购买商品的金额<script type="math/tex; mode=display">客单价=销售总额/成交总笔数</script>或<script type="math/tex; mode=display">客单价=商品平均单价\times每一个顾客平均购买商品个数</script>或<script type="math/tex; mode=display">客单价=动线长度\times停留率\times注目率\times购买率\times购买个数\times商品单价</script></li><li>PMF（Product/Market Fit）：产品与市场相契合的状态</li><li>点击付费广告（PPC，Pay Per Click）</li><li><strong>页面浏览量</strong>（PV，Page View）：网站在某一段时间内的页面浏览量是多少<ul><li>用户每一次对网站中的每个网页访问均被记录一个PV</li></ul></li><li>搜索引擎优化（SEO，Search Engine Optimization）</li><li><strong>SKU</strong>（Stock Keeping Unit）库存量单位：也称最小库存单元、最小库存单位、最小存货单位、单品等，<ul><li>对电商而言，SKU是指一款商品；一款商品多色，则有多个SKU</li></ul></li><li><strong>SPU</strong>（Standard Product Unit）标准产品单位：商品信息聚合的最小单位<ul><li>商品的特性可以由多个“属性/属性值对”进行描述；属性/属性值对完全相同的商品，可以抽象为一个SPU<blockquote><p>eg：HUAWEI MATE 50 可以确定一个产品，即为一个SPU</p></blockquote></li></ul></li><li><p>渠道来源（Traffic Sources）：用户流量来源于哪些不同的渠道</p></li><li><p>访客特征（UD，User Demographics）：访问用户具有哪些特征值，可用来做用户分类</p></li><li><strong>UV</strong>（Unique Visitor）：通过互联网访问、浏览该网站的自然人；一台电脑客户端视为一个访客。<ul><li>独立UV以浏览器cookie为依据；只要cookie不清除，同一天00:00-24:00内相同的客户端只被计算一次（2个人用不同的账号登录同一台电脑的同一个浏览器，只记录一个UV）</li><li>一天内同个访客多次访问仅计算一个UV</li><li>月UV等于日UV之和</li></ul></li><li><strong>用户浏览量</strong>（UV，User View）：网站在某一段时间内的用户浏览量是多少</li><li>VV（Visit View）：统计所有访客一天内访问网站的次数<ul><li>访客完成浏览并最终关掉该网站的所有页面即完成一次访问（Visit）</li><li>同一访客一天内可能有多次访问行为</li></ul></li><li>VIP顾客销售额占比（%）：用于判断店铺会员贡献<script type="math/tex; mode=display">VIP顾客销售额占比=\frac{会员顾客消费金额}{总销售额}\times100\%</script></li></ul><p>来源/参考：</p><ul><li><a href="https://baijiahao.baidu.com/s?id=1611777819781232073&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">SPU和SKU都是什么意思</a></li><li><a href="https://www.jianshu.com/p/a94d6f102108" target="_blank" rel="noopener">电商业务中大家都说的SKU是啥</a></li><li><a href="https://www.zhihu.com/question/20448467" target="_blank" rel="noopener">如何清楚易懂地解释“UV”和“PV”的定义？</a></li><li><a href></a></li><li><a href></a></li><li><a href></a></li></ul><h1><span id="不同行业">不同行业</span></h1><h2><span id="电商">电商</span></h2><p>电商用户的转化漏斗一般是：</p><p><pre class="mermaid">graph LR;    访问--> 注册;    注册-->搜索;    搜索-->浏览;    浏览-->加入购物车;    加入购物车-->支付;</pre><br>以及可能的“未来的退货”。</p><h2><span id="在线旅游">在线旅游</span></h2><h2><span id="求职网站">求职网站</span></h2><ul><li><a href="/2020/05/07/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-LinkedIn/" title="LinkedIn">LinkedIn</a></li><li></li></ul><p>求职网站变现的三种思路：</p><ol><li>用户信息收费</li><li>用人企业发布广告费用</li><li>猎头借助平台寻找精英的数据使用费用</li></ol><p>用户增长渠道：</p><ul><li>电子邮件邀请<br>用户被动地接受信息</li><li>搜索<br>用户主动地获取信息</li></ul><h2><span id="即时通信">即时通信</span></h2><h3><span id="陌陌">陌陌</span></h3><ul><li>主推陌生人交友特性，基于地理位置的“看附近的人”是其早期引爆增长的卖点</li><li>陌陌内部对每天“活跃用户”的定义是“登录成功并提交地理位置一次”</li></ul><h2><span id="其他">其他</span></h2><p>初创公司的常见问题：</p><ul><li>如何提升转化率？</li><li>如何提高留存度？<br>早期进来的用户一般是核心用户，留存度相对较高；后期拉来的用户相对黏度比较低。</li><li>创业公司不同阶段如何用好数据？<br>早期靠直觉，后期靠科学</li></ul><h1><span id="工具">工具</span></h1><h2><span id="ab-test">A/B test</span></h2><ul><li>网站Optimize.ly</li><li>网站Unbouce</li></ul><h2><span id="应用统计分析">应用统计分析</span></h2><p>移动应用统计分析平台：</p><ul><li>Google Analytics</li><li>友盟</li><li>Talking Data</li></ul><h1><span id="参考资料">参考资料</span></h1><p>[1] <a href="https://cn.bing.com/images/search?view=detailV2&amp;ccid=OeAo7X3d&amp;id=8DE4FFE2C9784F70995A7259FAA0FE7BC2FDC0BD&amp;thid=OIP.OeAo7X3dW94x7RoxwI0P_AHaEU&amp;mediaurl=http%3a%2f%2fwww.appadhoc.com%2fblog%2fwp-content%2fuploads%2f2017%2f02%2fwebanalysis.png&amp;exph=350&amp;expw=600&amp;q=%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90&amp;simid=607999727637630187&amp;selectedIndex=42" target="_blank" rel="noopener">首页缩略图</a><br>[2] <a href="http://blog.growingio.com/growth/298" target="_blank" rel="noopener">增长秘籍：互联网增长的第一本数据分析手册</a><br>[3] <a href="https://book.douban.com/subject/27593848/" target="_blank" rel="noopener">增长黑客</a><br>[4] <a href="https://mp.weixin.qq.com/s/XJPZtgA1owg7noLORLcMHw" target="_blank" rel="noopener">一套数据分析的实用方法论</a><br>[] <a href="https://baike.baidu.com/item/%E8%AF%A2%E7%9B%98/1164917?fr=aladdin" target="_blank" rel="noopener">百度百科-询盘</a></p>]]></content>
    
    
    <categories>
      
      <category>数据分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据分析</tag>
      
      <tag>业务向</tag>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Data Cleaning Projects</title>
    <link href="/2020/04/30/Data-Cleaning-Projects/"/>
    <url>/2020/04/30/Data-Cleaning-Projects/</url>
    
    <content type="html"><![CDATA[<p>Data Cleansing Projects 汇总</p><a id="more"></a><ul><li><a href="/2020/04/30/data-clean-Titanic/" title="数据集Titanic">数据集Titanic</a></li></ul><h4><span id="参考资料">参考资料</span></h4><p>[1] <a href="https://cn.bing.com/images/search?view=detailV2&amp;ccid=gpCSzLGU&amp;id=1898D7F14E27BFCC00B895A307ECC5F04313DE94&amp;thid=OIP.gpCSzLGUdIzn2Pkx-1iVFAHaEN&amp;mediaurl=https%3a%2f%2fpublic.tableau.com%2fs%2fsites%2fdefault%2ffiles%2fmedia%2fdata-cleaning-thumb2_20.jpg&amp;exph=766&amp;expw=1349&amp;q=data+cleaning&amp;simid=608010194433082183&amp;selectedIndex=175" target="_blank" rel="noopener">首页缩略图</a></p>]]></content>
    
    
    <categories>
      
      <category>Projects</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Data Cleaning</tag>
      
      <tag>R</tag>
      
      <tag>Projects</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Jupyter Notebook使用技巧</title>
    <link href="/2020/04/30/Jupyter-Notebook%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <url>/2020/04/30/Jupyter-Notebook%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<p>Jupyter Tips!</p><a id="more"></a><h3><span id="输出结果显示图片">输出结果显示图片</span></h3><pre><code class="lang-Python">%matplotlib inline</code></pre><h3><span id="同时输出多个命令的结果">同时输出多个命令的结果</span></h3><ol><li>方法一：在文件开头添加以下命令（仅对当前文件有效）<pre><code class="lang-Python">from IPython.core.interactiveshell import InteractiveShellInteractiveShell.ast_node_interactivity = &quot;all&quot;</code></pre></li><li>方法二：直接添加配置文件（对所有文件有效）<pre><code class="lang-Python">vi ~/.ipython/profile_default/ipython_config.py</code></pre>配置文件内容为：<pre><code class="lang-python">c = get_config()#Run all nodes interactivelyc.InteractiveShell.ast_node_interactivity = &quot;all&quot;</code></pre></li></ol><h3><span id="安装r-kernel">安装R kernel</span></h3><p>先在R中安装以下几个package：</p><pre><code class="lang-R">install.packages(c(&#39;repr&#39;, &#39;IRdisplay&#39;, &#39;evaluate&#39;, &#39;crayon&#39;,                    &#39;pbdZMQ&#39;, &#39;devtools&#39;, &#39;uuid&#39;, &#39;digest&#39;))devtools::install_github(&#39;IRkernel/IRkernel&#39;)</code></pre><p>在Anaconda Prompt中输入以下命令：<br>第一步：输入R，调用R</p><pre><code>R</code></pre><p>第二步：安装R kernel，有2种方式（自由选择，个人建议第二种）：</p><ol><li>直接安装在当前用户中：<pre><code class="lang-r">IRkernel::installspec()</code></pre></li><li>安装在系统中：<pre><code class="lang-r">IRkernel::installspec(user = FALSE)</code></pre></li></ol><h3><span id="运行时间">运行时间</span></h3><p>在cell中添加 <code>%%time</code> ，返回结果中会含有cell单次运行的时间。<br>在cell中添加 <code>%timeit</code> ，会运行该cell 100,000次（默认），然后以运行最快的3次结果的平均值作为结果。</p><pre><code class="lang-Python">import numpy%timeit numpy.random.normal(size = 10)# 5.91 µs ± 258 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)%%timeimport timefor _ in range(100):    time.sleep(0.01)# Wall time: 1.73 s</code></pre><h3><span id="插件管理器">插件管理器</span></h3><p>Nbextensions相当于Jupyter的插件管理器。<br>安装：（在Anaconda Prompt中输入）</p><pre><code class="lang-bash">conda install -c conda-forge jupyter_contrib_nbextensions</code></pre><p>安装过程需要选择[y/n]，输入y。</p><p>该选项卡下方罗列了大量Jupyter可用的插件；点击某个插件的名称，即可在列表下方显示该插件的说明文档；勾选某个插件前面的方框，则系统会加载启用该插件。</p><h3><span id="jupyter-lab">Jupyter Lab！</span></h3><p>超好用！是Project Jupyter的下一代用户界面，具体安装和使用说明请见《<a href="https://mp.weixin.qq.com/s/T-Afq0vAw0lVB9Bave-aNQ" target="_blank" rel="noopener">Jupyter：超强的下一代Jupyter Notebook</a>》（原文作者Parul Pandey，EarlGrey翻译，<a href="https://towardsdatascience.com/jupyter-lab-evolution-of-the-jupyter-notebook-5297cacde6b?gi=dec00114bf03" target="_blank" rel="noopener">原文网址</a>）。</p><h3><span id="切换code和markdown">切换Code和Markdown</span></h3><p>要快捷地切换Cell的形式（Code或Markdown），可按如下操作：<br>选中Cell（光标在Cell中闪烁），点击“Esc”，进入命令模式（光标不再Cell中闪烁，但Cell左侧仍有蓝色粗线条）；然后键盘按“Y”将Cell切换为Code模式，键盘按“M”则将Cell切换为Markdown模式。即</p><ul><li>Esc+Y：code模式</li><li>Esc+M：Markdown模式</li><li>Esc+B：快速添加新的Cell</li></ul><h3><span id="禁止输出警告warnings">禁止输出警告（warnings）</span></h3><p>运行以下代码：</p><pre><code class="lang-Python">import warningswarnings.filterwarnings(&quot;ignore&quot;)</code></pre><h4><span id="参考资料">参考资料</span></h4><p>[1] <a href="https://www.google.com/Jupyter" target="_blank" rel="noopener">首页缩略图</a><br>[2] <a href="https://www.cnblogs.com/bella1102/p/11032519.html" target="_blank" rel="noopener">Jupyter Notebook 如何让一个Cell 可以同时输出多个语句的值？</a><br>[3] <a href="https://www.sohu.com/a/219989263_774914" target="_blank" rel="noopener">Jupyter Notebook/Lab中添加R Kernel的详细步骤</a><br>[4] <a href="https://blog.csdn.net/create115721/article/details/79243641" target="_blank" rel="noopener">Jupyter Notebook的27个窍门，技巧和快捷键</a><br>[5] <a href="https://mp.weixin.qq.com/s/5sFkpI4eEodVQuLya3K5rw" target="_blank" rel="noopener">九大神招，让Python里数据分析神器Jupyter，完美升华</a></p>]]></content>
    
    
    <categories>
      
      <category>无从属</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Jupyter</tag>
      
      <tag>软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL</title>
    <link href="/2020/04/30/SQL%E9%A2%98%E5%BA%93/"/>
    <url>/2020/04/30/SQL%E9%A2%98%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<p>SQL相关知识积累~</p><a id="more"></a><h1><span id="通用">通用</span></h1><ul><li><a href="/2020/05/03/sql-1-%E8%8C%83%E5%BC%8F/" title="范式">范式</a></li><li><a href="/2020/05/03/sql-2-%E6%A8%A1%E5%BC%8F/" title="模式">模式</a></li><li><a href="/2020/05/03/sql-3-%E6%95%B0%E6%8D%AE%E5%AE%8C%E6%95%B4%E6%80%A7/" title="数据完整性">数据完整性</a></li><li></li></ul><h1><span id="mysql">MySQL</span></h1><ul><li></li></ul><h1><span id="ms-sql-server">MS SQL Server</span></h1><ul><li></li></ul><h1><span id="access">ACCESS</span></h1><ul><li><a href="/2020/05/03/access-1/" title="ACCESS窗体">ACCESS窗体</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode刷题</title>
    <link href="/2020/04/29/Leetcode%E5%88%B7%E9%A2%98/"/>
    <url>/2020/04/29/Leetcode%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>Leetcode刷题记录~</p><a id="more"></a><h1><span id="1-two-sum">1. Two Sum</span></h1><p><a href="https://leetcode.com/problems/two-sum/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def twoSum(self, nums: List[int], target: int) -&gt; List[int]:        i = 0        while nums:            num = nums[0]            nums.pop(0)            if target - num in nums:                return [i, nums.index(target-num) + i + 1]            i += 1</code></pre><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><h1><span id="67-add-binary">67. Add Binary</span></h1><p><a href="https://leetcode.com/problems/add-binary/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def addBinary(self, a: str, b: str) -&gt; str:        return bin(int(a, 2) + int(b, 2))[2:]</code></pre><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><h1><span id="177-nth-highest-salary">177. Nth Highest Salary</span></h1><p><a href="https://leetcode.com/problems/nth-highest-salary/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-SQL">-- Runtime=553msCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INTBEGINDECLARE M INT;SET M=N-1;  RETURN (      # Write your MySQL query statement below.      SELECT Salary FROM             (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC) a      LIMIT 1 OFFSET M  );END-- Runtime=416msCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INTBEGINDECLARE M INT;SET M=N-1;  RETURN (      # Write your MySQL query statement below.      SELECT DISTINCT Salary FROM Employee      ORDER BY Salary DESC      LIMIT 1 OFFSET M  );</code></pre><h1><span id="657-robot-return-to-origin">657. Robot Return to Origin</span></h1><p><a href="https://leetcode.com/problems/robot-return-to-origin/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">## Runtime=64ms, Memory=13.8MBclass Solution:    def judgeCircle(self, moves: str) -&gt; bool:        pos = [0, 0]        for move in moves:            if move==&#39;L&#39;:                pos[0] += 1            elif move==&#39;R&#39;:                pos[0] -= 1            elif move==&#39;U&#39;:                pos[1] += 1            else:                pos[1] -= 1        return pos==[0,0]## Solution## Runtime=60ms, Memory=13.8MBclass Solution:    def judgeCircle(self, moves: str) -&gt; bool:        x = y = 0        for move in moves:            if move == &#39;U&#39;: y -= 1            elif move == &#39;D&#39;: y += 1            elif move == &#39;L&#39;: x -= 1            elif move == &#39;R&#39;: x += 1        return x == y == 0</code></pre><h1><span id="728-self-dividing-numbers">728. Self Dividing Numbers</span></h1><p><a href="https://leetcode.com/problems/self-dividing-numbers/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">## Runtime=68ms, Memory=13.9MBclass Solution:    def selfDividingNumbers(self, left: int, right: int) -&gt; List[int]:        result = []        for num in range(left, right+1):            nums = list(map(int, list(str(num))))            count = 0            if 0 in nums:                pass            else:                for j in nums:                    if num%j == 0:                        count += 1                if count == len(nums):                    result.append(num)        return result## 参考 Solution## Rumtime=36ms, Memory=14MBclass Solution:    def selfDividingNumbers(self, left: int, right: int) -&gt; List[int]:        result = []        for num in range(left, right+1):            for x in str(num):                if x == &quot;0&quot; or num % int(x) != 0:                    break            else:                result.append(num)        return result</code></pre><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><h1><span id="832-flipping-an-image">832. Flipping an Image</span></h1><p><a href="https://leetcode.com/problems/flipping-an-image/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">## Runtime=56ms, Memory=13.9MBclass Solution:    def flipAndInvertImage(self, A: List[List[int]]) -&gt; List[List[int]]:        for i in range(len(A)):            A[i].reverse()            A[i] = [1-x for x in A[i]]        return A## Runtime=52ms, Memory=14MBclass Solution:    def flipAndInvertImage(self, A: List[List[int]]) -&gt; List[List[int]]:        for i in range(len(A)):            A[i] = A[i][::-1]  ## difference            A[i] = [1-x for x in A[i]]        return A## Runtime=48ms, Memory=14MBclass Solution:    def flipAndInvertImage(self, A: List[List[int]]) -&gt; List[List[int]]:        for i, row in enumerate(A):  ## differencee            A[i] = row[::-1]            for j, col in enumerate(A[i]):  ## difference                A[i][j] = 1 - col        return A</code></pre><h1><span id="852-peak-index-in-a-mountain-array">852. Peak Index in a Mountain Array</span></h1><p><a href="https://leetcode.com/problems/peak-index-in-a-mountain-array/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">## Runtime=84ms, Memory=15.1MBclass Solution:    def peakIndexInMountainArray(self, A: List[int]) -&gt; int:        idx = int((len(A)-1)/2 if len(A)%2==1 else len(A)/2)        left, right = idx-1, idx+1        while left&gt;=0 and right&lt;len(A):            if A[idx]&gt;A[left] and A[idx]&gt;A[right]:                break            elif A[idx]&lt;A[left]:                left -= 1                idx -= 1                right -= 1            else:                left += 1                idx += 1                right += 1        return idx## Runtime=80ms, Memory=15MB## Binary search in Solutionclass Solution:    def peakIndexInMountainArray(self, A: List[int]) -&gt; int:        lo, hi = 0, len(A) - 1        while lo &lt; hi:            mi = int((lo + hi) / 2)            if A[mi] &lt; A[mi + 1]:                lo = mi + 1            else:                hi = mi        return lo## Runtime=84ms, Memory=15.2MB## Linear scanclass Solution:    def peakIndexInMountainArray(self, A: List[int]) -&gt; int:        for i in range(len(A)):            if A[i] &gt; A[i+1]:                return i</code></pre><h1><span id="942-di-string-match">942. DI String Match</span></h1><p><a href="https://leetcode.com/problems/di-string-match/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">## 参考了 Solutionclass Solution:    def diStringMatch(self, S: str) -&gt; List[int]:        low, high = 0, len(S)        result = []        for s in S:            if s == &#39;I&#39;:                result.append(low)                low += 1            else:                result.append(high)                high -= 1        return result + [low]</code></pre><h1><span id="965-univalued-binary-tree">965. Univalued Binary Tree</span></h1><p><a href="https://leetcode.com/problems/univalued-binary-tree/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python"># Definition for a binary tree node.# class TreeNode:#     def __init__(self, val=0, left=None, right=None):#         self.val = val#         self.left = left#         self.right = rightclass Solution:    def isUnivalTree(self, root: TreeNode) -&gt; bool:        values = []        def dfs(node):            if node:                values.append(node.val)                dfs(node.left)                dfs(node.right)        dfs(root)        return len(set(values)) == 1</code></pre><h1><span id="977-squares-of-a-sorted-array">977. Squares of a Sorted Array</span></h1><p><a href="https://leetcode.com/problems/squares-of-a-sorted-array/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">## Runtime=228ms, Memory=15.7MBclass Solution:    def sortedSquares(self, A: List[int]) -&gt; List[int]:         return sorted([x**2 for x in A])## Runtime=216ms, Memory=15.8MBclass Solution:    def sortedSquares(self, A: List[int]) -&gt; List[int]:         return sorted([x*x for x in A])</code></pre><h1><span id="1021-remove-outermost-parentheses">1021. Remove Outermost Parentheses</span></h1><p><a href="https://leetcode.com/problems/remove-outermost-parentheses/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">## 参考了solutions in discussclass Solution:    def removeOuterParentheses(self, S: str) -&gt; str:        count, result = 0, []        for s in S:            if s == &quot;)&quot;:  ##  完整配对count=0；增加一个&quot;)&quot;count减一；增加一个&quot;(&quot;count加一                count -= 1            if count &gt; 0:                result.append(s)            if s == &quot;(&quot;:                 count += 1        return &quot;&quot;.join(result)</code></pre><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><h1><span id="1108-defanging-an-ip-address">1108. Defanging an IP Address</span></h1><p><a href="https://leetcode.com/problems/defanging-an-ip-address/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def defangIPaddr(self, address: str) -&gt; str:        return address.replace(&quot;.&quot;, &quot;[.]&quot;)</code></pre><h1><span id="1221-split-a-string-in-balanced-strings">1221. Split a String in Balanced Strings</span></h1><p><a href="https://leetcode.com/problems/split-a-string-in-balanced-strings/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def balancedStringSplit(self, s: str) -&gt; int:        ans_count = 0        L_num, R_num = 0, 0        for ss in s:            if ss==&quot;L&quot;:                L_num += 1            else:                R_num += 1            if L_num==R_num:                ans_count += 1                L_num, R_num = 0, 0        return ans_count</code></pre><h1><span id="1252-cells-with-odd-values-in-a-matrix">1252. Cells with Odd Values in a Matrix</span></h1><p><a href="https://leetcode.com/problems/cells-with-odd-values-in-a-matrix/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def oddCells(self, n: int, m: int, indices: List[List[int]]) -&gt; int:        nums = [[0]*m]*n  ## 快速创建0矩阵        rows, cols = [0]*n, [0]*m        lst = []        for index in indices:            ri, ci = index[0], index[1]            rows[ri] += 1            cols[ci] += 1        for i in range(n):            for j in range(m):                nums[i][j] = rows[i] + cols[j]            lst += nums[i]        return sum([1 if x%2==1 else 0 for x in lst])</code></pre><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><h1><span id="1266-minimum-time-visiting-all-points">1266. Minimum Time Visiting All Points</span></h1><p><a href="https://leetcode.com/problems/minimum-time-visiting-all-points/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def minTimeToVisitAllPoints(self, points: List[List[int]]) -&gt; int:        steps = 0        for i in range(len(points)-1):            x1, y1 = points[i][0], points[i][1]            x2, y2 = points[i+1][0], points[i+1][1]            m, n = abs(x2 - x1), abs(y2 - y1)            steps += max(m, n)        return steps</code></pre><h1><span id="1281-subtract-the-product-and-sum-of-digits-of-an-integer">1281. Subtract the Product and Sum of Digits of an Integer</span></h1><p><a href="https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def subtractProductAndSum(self, n: int) -&gt; int:        num = [x for x in str(n)]        num = list(map(int, num))  ## 将int拆开成单个数字列表        pp = 1        ss = 0        for nn in num:            pp *= nn            ss += nn        return pp - ss</code></pre><h1><span id="1290-convert-binary-number-in-a-linked-list-to-integer">1290. Convert Binary Number in a Linked List to Integer</span></h1><p><a href="https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python"># Definition for singly-linked list.# class ListNode:#     def __init__(self, val=0, next=None):#         self.val = val#         self.next = nextclass Solution:    def getDecimalValue(self, head: ListNode) -&gt; int:        str_num = &quot;&quot;        while head:  ## 当head非空            str_num += str(head.val)            head = head.next        return int(str_num, 2)</code></pre><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><h1><span id="1295-find-numbers-with-even-number-of-digits">1295. Find Numbers with Even Number of Digits</span></h1><p><a href="https://leetcode.com/problems/find-numbers-with-even-number-of-digits/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def findNumbers(self, nums: List[int]) -&gt; int:        ans_count = 0        for num in nums:            num_count = 0            while num:                num_count += 1                num //= 10  ## num除以10的商            if num_count % 2 == 0:  ## num_count除以2的余数等于0                ans_count += 1        return ans_count</code></pre><h1><span id="1299-replace-elements-with-greatest-element-on-right-side">1299. Replace Elements with Greatest Element on Right Side</span></h1><p><a href="https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">## Runtime=4720msclass Solution:    def replaceElements(self, arr: List[int]) -&gt; List[int]:        out = []        n = len(arr)        for i in range(n-1):            out.append(max(arr[(i+1):]))        out.append(-1)        return out## A solution in &#39;Discuss&#39;## Runtime=125msclass Solution:    def replaceElements(self, arr: List[int]) -&gt; List[int]:        max_num = -1        for i in range(len(arr)-1, -1, -1):            hold = arr[i]            arr[i] = max_num            if hold &gt; max_num:                max_num = hold        return arr</code></pre><h1><span id="1304-find-n-unique-integers-sum-up-to-zero">1304. Find N Unique Integers Sum up to Zero</span></h1><p><a href="https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def sumZero(self, n: int) -&gt; List[int]:        result = []        if n % 2 == 0:            lst = [x for x in range(n-1)]            result.extend(lst)            result.append(-sum(lst))        else:            lst = [x for x in range(1,int((n+1)//2))]            result.extend(lst)            result.extend([-x for x in lst])            result.append(0)        return result</code></pre><h1><span id="1309-decrypt-string-from-alphabet-to-integer-mapping">1309. Decrypt String from Alphabet to Integer Mapping</span></h1><p><a href="https://leetcode.com/problems/decrypt-string-from-alphabet-to-integer-mapping/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def freqAlphabets(self, s: str) -&gt; str:        result = &quot;&quot;        dic = {}        for i in range(97,123):            if i &lt;= 105:                dic[str(i - 96)] = chr(i)            else:                dic[str(i - 96) + &#39;#&#39;] = chr(i)        i = 0        while i &lt; len(s):            if  i+2 &lt; len(s) and s[i+2] == &#39;#&#39;:                key = s[i:i+3]                i += 3            else:                key = s[i]                i += 1            result += dic[key]        return result</code></pre><h1><span id="1313-decompress-run-length-encoded-list">1313. Decompress Run-Length Encoded List</span></h1><p><a href="https://leetcode.com/problems/decompress-run-length-encoded-list/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def decompressRLElist(self, nums: List[int]) -&gt; List[int]:        n = len(nums)        ans = []        for i in range(int(n/2)):            n = nums[2*i]            num = nums[2*i+1]            for j in range(n):                ans.append(num)        return ans</code></pre><h1><span id="1323-maximum-69-number">1323. Maximum 69 Number</span></h1><p><a href="https://leetcode.com/problems/maximum-69-number/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def maximum69Number (self, num: int) -&gt; int:        i = 0        out = [x for x in str(num)]        while i&lt;len(out):            if out[i] == &#39;6&#39;:                out[i] = &#39;9&#39;                break            i += 1        return int(&#39;&#39;.join(out))</code></pre><h1><span id="1342-number-of-steps-to-reduce-a-number-to-zero">1342. Number of Steps to Reduce a Number to Zero</span></h1><p><a href="https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def numberOfSteps (self, num: int) -&gt; int:        cou = 0        while num&gt;0:            if num % 2 == 0:  ## if even                num = int(num / 2)            else:  ## if odd                num -= 1            cou += 1        return cou</code></pre><h1><span id="1351-count-negative-numbers-in-a-sorted-matrix">1351. Count Negative Numbers in a Sorted Matrix</span></h1><p><a href="https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def countNegatives(self, grid: List[List[int]]) -&gt; int:        nums = []        for i in range(len(grid)):            nums += grid[i]        return sum([1 if x&lt;0 else 0 for x in nums])</code></pre><h1><span id="1370-increasing-decreasing-string">1370. Increasing Decreasing String</span></h1><p><a href="https://leetcode.com/problems/increasing-decreasing-string/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">## 参考了 solution in discussclass Solution:    def sortString(self, s: str) -&gt; str:        result = []        s = [x for x in s]  ## 等价于 s = list(s)        direct = 1  ## =1表示从小到大；=-1表示从大到小        while s:  ## 当s非空时            if direct == 1:                ss = sorted(set(s))  ## 从小到大            else:                 ss = sorted(set(s))[::-1]  ## 从大到小            result.extend(ss)            for x in ss:                s.remove(x)            direct *= -1  ## 反向        return &quot;&quot;.join(result)</code></pre><h1><span id="1374-generate-a-string-with-characters-that-have-odd-counts">1374. Generate a String With Characters That Have Odd Counts</span></h1><p><a href="https://leetcode.com/problems/generate-a-string-with-characters-that-have-odd-counts/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def generateTheString(self, n: int) -&gt; str:        if n%2==0:            return &#39;a&#39;*(n-1) + &#39;b&#39;        else:            return &#39;a&#39;*n</code></pre><h1><span id="1380-lucky-numbers-in-a-matrix">1380. Lucky Numbers in a Matrix</span></h1><p><a href="https://leetcode.com/problems/lucky-numbers-in-a-matrix/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def luckyNumbers (self, matrix: List[List[int]]) -&gt; List[int]:        rows = [min(x) for x in matrix]        n, m = len(matrix), len(matrix[0])        cols, ans = [], []        for j in range(m):            col = [x[j] for x in matrix]            cols.append(max(col))        for i in range(n):            for j in range(m):                if matrix[i][j] == rows[i] and matrix[i][j] == cols[j]:                    ans.append(matrix[i][j])        return ans</code></pre><h1><span id="1389-create-target-array-in-the-given-order">1389. Create Target Array in the Given Order</span></h1><p><a href="https://leetcode.com/problems/create-target-array-in-the-given-order/" target="_blank" rel="noopener">题目详情</a></p><pre><code class="lang-Python">class Solution:    def createTargetArray(self, nums: List[int], index: List[int]) -&gt; List[int]:        ans = []        for i in range(len(nums)):            num, idx = nums[i], index[i]            if idx &gt;= len(ans):                ans.append(num)            else:                a, b = ans[:idx], ans[idx:]                ans = a + [num] + b        return ans</code></pre><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><p><a href>题目详情</a></p><pre><code class="lang-Python"></code></pre><h1><span id="推荐资料">推荐资料</span></h1><p>[1] <a href="https://www.ranxiaolang.com/static/leetcode_python.pdf" target="_blank" rel="noopener">Leetcode-Python解题思路</a></p>]]></content>
    
    
    <categories>
      
      <category>藏宝库</category>
      
      <category>题库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Leetcode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python题库</title>
    <link href="/2020/04/29/Python%E9%A2%98%E5%BA%93/"/>
    <url>/2020/04/29/Python%E9%A2%98%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<p>Python相关题目积累~</p><a id="more"></a><ul><li><a href="/2020/04/29/Python-is-%E5%92%8C-%E7%9A%84%E5%8C%BA%E5%88%AB/" title="is和&#x3D;&#x3D;的区别">is和&#x3D;&#x3D;的区别</a></li><li><a href="/2020/04/29/python-2-tuple%E5%92%8Clist/" title="tuple（元组）和list（列表）的区别">tuple（元组）和list（列表）的区别</a></li><li><a href="/2020/04/29/python-3/" title="b, B, KB, MB, GB的区别">b, B, KB, MB, GB的区别</a></li><li><a href="/2020/05/03/python-7-%E5%88%87%E7%89%87%E6%93%8D%E4%BD%9C/" title="切片操作不会引起下标越界异常">切片操作不会引起下标越界异常</a></li><li></li><li></li></ul>]]></content>
    
    
    <categories>
      
      <category>藏宝库</category>
      
      <category>题库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+GitHub+Markdown常用用法</title>
    <link href="/2020/04/28/Hexo-GitHub-Markdown%E5%B8%B8%E7%94%A8%E7%94%A8%E6%B3%95/"/>
    <url>/2020/04/28/Hexo-GitHub-Markdown%E5%B8%B8%E7%94%A8%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>记录一些Hexo+Markdown的常用语法~</p><a id="more"></a><!--toc--><h1><span id="hexo">Hexo</span></h1><h2><span id="部署">部署</span></h2><h3><span id="新建博客">新建博客</span></h3><pre><code class="lang-shell">$ hexo n &#39;博客名称&#39;</code></pre><h3><span id="上传">上传</span></h3><pre><code class="lang-shell">$ hexo g</code></pre><p>即 <code>hexo generate</code></p><h2><span id="首页">首页</span></h2><h3><span id="fork-me-on-github">Fork me on GitHub</span></h3><ul><li><a href="https://blog.csdn.net/fly_wt/article/details/86674138" target="_blank" rel="noopener">在右上角实现fork me on github</a></li></ul><h2><span id="正文">正文</span></h2><h3><span id="标题自动编号">标题自动编号</span></h3><ul><li><a href="http://r12f.com/posts/adding-index-to-your-headings-with-hexo-heading-index/" target="_blank" rel="noopener">为Hexo博客标题自动添加序号：hexo-heading-index</a></li></ul><h2><span id="代码">代码</span></h2><h3><span id="高亮">高亮</span></h3><ul><li><a href="https://www.zfl9.com/hexo-code.html" target="_blank" rel="noopener">使用prism.js进行代码高亮</a></li><li><a href="https://www.jianshu.com/p/1f223eb78ad8" target="_blank" rel="noopener">markdown代码块支持的语言</a></li></ul><h2><span id="主题">主题</span></h2><h3><span id="fluid主题">Fluid主题</span></h3><p>安装可见：<a href="https://hexo.fluid-dev.com/docs/guide/#%E4%B8%BB%E9%A2%98%E7%AE%80%E4%BB%8B" target="_blank" rel="noopener">Hexo-fluid</a></p><p>压缩包<a href="https://github.com/fluid-dev/hexo-theme-fluid/releases/tag/v1.8.0-beta2">下载</a></p><h2><span id="其他功能">其他功能</span></h2><h3><span id="评论">评论</span></h3><ul><li><a href="https://litstronger.github.io/2020/04/03/hexo-fluid%E6%B7%BB%E5%8A%A0utterances%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">hexo-fluid添加utterances评论功能</a><h3><span id="流程图">流程图</span></h3></li><li><a href="https://www.cnblogs.com/icoty23/p/10911231.html" target="_blank" rel="noopener">Hexo引入Mermaid流程图和MathJax数学公式</a></li><li><a href="https://blog.csdn.net/Olivia_Vang/article/details/92987859#%E8%AF%AD%E6%B3%95" target="_blank" rel="noopener">Hexo中插入mermaid diagrams</a></li></ul><h1><span id="markdown">Markdown</span></h1><h2><span id="font-matter区">Font-matter区</span></h2><p>Font-matter区即 两行<code>---</code>之间的内容</p><h2><span id="正文">正文</span></h2><h3><span id="文章摘要">文章摘要</span></h3><p>若想要在博客首页只展示文章的摘要，在摘要与正文中间插入</p><pre><code class="lang-md">&lt;!--more--&gt;</code></pre><h3><span id="引用站内文章">引用站内文章</span></h3><pre><code class="lang-md">{% post_link 站内文章对应的.md名称（不带后缀.md） %}</code></pre><p>如：引用站内文章《<a href="/2020/04/27/Restart/" title="Restart!">Restart!</a>》，对应的文件名是<code>Restart.md</code></p><pre><code class="lang-md">{% post_link Restart %}</code></pre><h3><span id="字体">字体</span></h3><pre><code class="lang-md">&lt;font face=&quot;字体&quot; size=&quot;字号&quot; color=&quot;颜色&quot;&gt;这里是需要突出显示的内容&lt;/font&gt;</code></pre><h3><span id="图片">图片</span></h3><h4><span id="插入图片">插入图片</span></h4><p>参考：<a href="https://blog.csdn.net/xjm850552586/article/details/84101345" target="_blank" rel="noopener">hexo引用本地图片无法显示</a></p><p>Markdown语法：</p><pre><code class="lang-md">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;{% asset_img inorder.png 中序遍历 %}</code></pre><p>或</p><pre><code class="lang-md">![title](name.jpg)</code></pre><h3><span id="表格">表格</span></h3><ul><li><a href="https://www.jianshu.com/p/b6c85800c44e" target="_blank" rel="noopener">Markdown表格中换行、合并单元格</a></li></ul><h1><span id="参考资料">参考资料</span></h1>]]></content>
    
    
    <categories>
      
      <category>无从属</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tableau学习资源</title>
    <link href="/2020/04/27/Tableau%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
    <url>/2020/04/27/Tableau%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<p>汇总Tableau软件的相关学习资料~</p><a id="more"></a><h2><span id="书籍">书籍</span></h2><h3><span id="触手可及的大数据分析工具tableau案例集">《触手可及的大数据分析工具：Tableau案例集》</span></h3><p><a href="https://book.douban.com/subject/26614166/" target="_blank" rel="noopener">豆瓣图书</a></p><h2><span id="视频">视频</span></h2><h3><span id="未明学院-tableau可视化软件的基础操作和进阶">未明学院-Tableau可视化软件的基础操作和进阶</span></h3><p><a href="https://www.bilibili.com/video/av66028664?from=search&amp;seid=5882922976125124544" target="_blank" rel="noopener">视频地址</a></p><p>共14个视频</p><ol><li>Tableau简介、条形图与直方图</li><li>数据预处理、折线图、饼图</li><li>基本表、树状图、气泡图、词云</li><li>标靶图、甘特图、瀑布图</li><li>Tableau进阶：数据集合并、符号地图、智能显示、插入自定义形状、仪表板</li><li>填充地图、多维地图、混合地图</li><li>多边形地图和背景地图：设置地理信息，自定义地图码导入、设置地图源</li><li>数据分层、数据分组、数据集</li><li>计算字段与表计算：粒度、聚合与比率</li><li>人口金字塔、漏斗图、箱线图</li><li>范围：线图、倾斜图</li><li>网络图与弧线图</li><li>雷达图与弧线图</li><li>回归分析、时间序列分析</li></ol>]]></content>
    
    
    <categories>
      
      <category>藏宝库</category>
      
      <category>资源</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tableau</tag>
      
      <tag>可视化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Restart!</title>
    <link href="/2020/04/27/Restart/"/>
    <url>/2020/04/27/Restart/</url>
    
    <content type="html"><![CDATA[<p>从零开始我的个人博客！</p><a id="more"></a><p>一年前已经成功搭建此博客，但是我在调整博客主题时把它搞成404了（泪目），于是重新搭建了，那么就从零restart吧！</p><h3><span id="参考">参考</span></h3><p>[1] <a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">使用hexo+github搭建免费个人博客详细教程</a><br>[2] <a href="https://wangcong.net/article/HexoWihLaTeX.html" target="_blank" rel="noopener">Hexo中Latex公式渲染</a><br>[3] <a href="https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2">创建分类页面</a><br>[4] <a href="https://www.jianshu.com/p/70e46dc95676" target="_blank" rel="noopener">设定代码高亮格式</a><br>[5] <a href="https://bing.ioliu.cn/photo/MalhamStars_ZH-CN4163177154?force=home_6" target="_blank" rel="noopener">博客首页图片</a></p>]]></content>
    
    
    <categories>
      
      <category>无从属</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
